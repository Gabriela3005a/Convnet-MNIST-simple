{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Gabriela3005a/Convnet-MNIST-simple/blob/main/NPL%3A%20Preprocesamiento%20PNL%20apartir%20de%20tuits.\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nEjAVzAzuQAM"
      },
      "source": [
        "# Taller Práctico 1: Preprocesamiento PNL apartir de tuits.\n",
        "\n",
        "En el presente taller pondremos en práctica los conocimientos adquiridos sobre PNL, teniendo en cuenta los siguientes temas:\n",
        "\n",
        "* Conocimientos básicos de NLP con NLTK\n",
        "* Limpieza de texto.\n",
        "* Preprocesamiento de textos  aplicando Tokenization y eliminación de stop words.\n",
        "\n",
        "El análisis se hará sobre un conjunto de 100 tuits de ejemplo, seleccionados de un dataset de [tuits en español](https://huggingface.co/datasets/pysentimiento/spanish-tweets).\n",
        "\n",
        "El objetivo final del procesamiento es:\n",
        "\n",
        "1. Encontrar una palabra importante del tuit. Para esto, buscaremos palabras con alta frecuencia dentro del tuit pero que no sean frecuentes en todos los tuits. Es decir, una medida de \"Unicidad\".\n",
        "\n",
        "2. Además de encontrar cual es el bigram y trigam más comúnes en todos los tuits."
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Requisitos"
      ],
      "metadata": {
        "id": "e1B6RnKDS1xg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install emoji\n",
        "!pip install spacy\n",
        "!python -m spacy download es_core_news_sm"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DN9dm8WMHbca",
        "outputId": "f94e15b4-9dd4-4ac6-d454-0833c0f19ad7"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting emoji\n",
            "  Downloading emoji-2.11.0-py2.py3-none-any.whl (433 kB)\n",
            "\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/433.8 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━━━━━━━━━\u001b[0m\u001b[90m╺\u001b[0m\u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m153.6/433.8 kB\u001b[0m \u001b[31m4.4 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m433.8/433.8 kB\u001b[0m \u001b[31m7.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: emoji\n",
            "Successfully installed emoji-2.11.0\n",
            "Requirement already satisfied: spacy in /usr/local/lib/python3.10/dist-packages (3.7.4)\n",
            "Requirement already satisfied: spacy-legacy<3.1.0,>=3.0.11 in /usr/local/lib/python3.10/dist-packages (from spacy) (3.0.12)\n",
            "Requirement already satisfied: spacy-loggers<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (1.0.5)\n",
            "Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (1.0.10)\n",
            "Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy) (2.0.8)\n",
            "Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy) (3.0.9)\n",
            "Requirement already satisfied: thinc<8.3.0,>=8.2.2 in /usr/local/lib/python3.10/dist-packages (from spacy) (8.2.3)\n",
            "Requirement already satisfied: wasabi<1.2.0,>=0.9.1 in /usr/local/lib/python3.10/dist-packages (from spacy) (1.1.2)\n",
            "Requirement already satisfied: srsly<3.0.0,>=2.4.3 in /usr/local/lib/python3.10/dist-packages (from spacy) (2.4.8)\n",
            "Requirement already satisfied: catalogue<2.1.0,>=2.0.6 in /usr/local/lib/python3.10/dist-packages (from spacy) (2.0.10)\n",
            "Requirement already satisfied: weasel<0.4.0,>=0.1.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (0.3.4)\n",
            "Requirement already satisfied: typer<0.10.0,>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (0.9.4)\n",
            "Requirement already satisfied: smart-open<7.0.0,>=5.2.1 in /usr/local/lib/python3.10/dist-packages (from spacy) (6.4.0)\n",
            "Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (4.66.2)\n",
            "Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (2.31.0)\n",
            "Requirement already satisfied: pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4 in /usr/local/lib/python3.10/dist-packages (from spacy) (2.7.0)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from spacy) (3.1.3)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from spacy) (67.7.2)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (24.0)\n",
            "Requirement already satisfied: langcodes<4.0.0,>=3.2.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (3.3.0)\n",
            "Requirement already satisfied: numpy>=1.19.0 in /usr/local/lib/python3.10/dist-packages (from spacy) (1.25.2)\n",
            "Requirement already satisfied: annotated-types>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy) (0.6.0)\n",
            "Requirement already satisfied: pydantic-core==2.18.1 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy) (2.18.1)\n",
            "Requirement already satisfied: typing-extensions>=4.6.1 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy) (4.11.0)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (3.7)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy) (2024.2.2)\n",
            "Requirement already satisfied: blis<0.8.0,>=0.7.8 in /usr/local/lib/python3.10/dist-packages (from thinc<8.3.0,>=8.2.2->spacy) (0.7.11)\n",
            "Requirement already satisfied: confection<1.0.0,>=0.0.1 in /usr/local/lib/python3.10/dist-packages (from thinc<8.3.0,>=8.2.2->spacy) (0.1.4)\n",
            "Requirement already satisfied: click<9.0.0,>=7.1.1 in /usr/local/lib/python3.10/dist-packages (from typer<0.10.0,>=0.3.0->spacy) (8.1.7)\n",
            "Requirement already satisfied: cloudpathlib<0.17.0,>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from weasel<0.4.0,>=0.1.0->spacy) (0.16.0)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->spacy) (2.1.5)\n",
            "Collecting es-core-news-sm==3.7.0\n",
            "  Downloading https://github.com/explosion/spacy-models/releases/download/es_core_news_sm-3.7.0/es_core_news_sm-3.7.0-py3-none-any.whl (12.9 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m12.9/12.9 MB\u001b[0m \u001b[31m28.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: spacy<3.8.0,>=3.7.0 in /usr/local/lib/python3.10/dist-packages (from es-core-news-sm==3.7.0) (3.7.4)\n",
            "Requirement already satisfied: spacy-legacy<3.1.0,>=3.0.11 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (3.0.12)\n",
            "Requirement already satisfied: spacy-loggers<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (1.0.5)\n",
            "Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (1.0.10)\n",
            "Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (2.0.8)\n",
            "Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (3.0.9)\n",
            "Requirement already satisfied: thinc<8.3.0,>=8.2.2 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (8.2.3)\n",
            "Requirement already satisfied: wasabi<1.2.0,>=0.9.1 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (1.1.2)\n",
            "Requirement already satisfied: srsly<3.0.0,>=2.4.3 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (2.4.8)\n",
            "Requirement already satisfied: catalogue<2.1.0,>=2.0.6 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (2.0.10)\n",
            "Requirement already satisfied: weasel<0.4.0,>=0.1.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (0.3.4)\n",
            "Requirement already satisfied: typer<0.10.0,>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (0.9.4)\n",
            "Requirement already satisfied: smart-open<7.0.0,>=5.2.1 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (6.4.0)\n",
            "Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (4.66.2)\n",
            "Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (2.31.0)\n",
            "Requirement already satisfied: pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (2.7.0)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (3.1.3)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (67.7.2)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (24.0)\n",
            "Requirement already satisfied: langcodes<4.0.0,>=3.2.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (3.3.0)\n",
            "Requirement already satisfied: numpy>=1.19.0 in /usr/local/lib/python3.10/dist-packages (from spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (1.25.2)\n",
            "Requirement already satisfied: annotated-types>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (0.6.0)\n",
            "Requirement already satisfied: pydantic-core==2.18.1 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (2.18.1)\n",
            "Requirement already satisfied: typing-extensions>=4.6.1 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (4.11.0)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (3.7)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0,>=2.13.0->spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (2024.2.2)\n",
            "Requirement already satisfied: blis<0.8.0,>=0.7.8 in /usr/local/lib/python3.10/dist-packages (from thinc<8.3.0,>=8.2.2->spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (0.7.11)\n",
            "Requirement already satisfied: confection<1.0.0,>=0.0.1 in /usr/local/lib/python3.10/dist-packages (from thinc<8.3.0,>=8.2.2->spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (0.1.4)\n",
            "Requirement already satisfied: click<9.0.0,>=7.1.1 in /usr/local/lib/python3.10/dist-packages (from typer<0.10.0,>=0.3.0->spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (8.1.7)\n",
            "Requirement already satisfied: cloudpathlib<0.17.0,>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from weasel<0.4.0,>=0.1.0->spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (0.16.0)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->spacy<3.8.0,>=3.7.0->es-core-news-sm==3.7.0) (2.1.5)\n",
            "Installing collected packages: es-core-news-sm\n",
            "Successfully installed es-core-news-sm-3.7.0\n",
            "\u001b[38;5;2m✔ Download and installation successful\u001b[0m\n",
            "You can now load the package via spacy.load('es_core_news_sm')\n",
            "\u001b[38;5;3m⚠ Restart to reload dependencies\u001b[0m\n",
            "If you are in a Jupyter or Colab notebook, you may need to restart Python in\n",
            "order to load all the package's dependencies. You can do this by selecting the\n",
            "'Restart kernel' or 'Restart runtime' option.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "import json\n",
        "import nltk\n",
        "import emoji\n",
        "import spacy\n",
        "import subprocess\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "from itertools import chain\n",
        "import matplotlib.pyplot as plt\n",
        "from wordcloud import WordCloud\n",
        "from nltk.corpus import stopwords\n",
        "from nltk import bigrams, trigrams\n",
        "from nltk.tokenize import word_tokenize\n",
        "%matplotlib inline"
      ],
      "metadata": {
        "id": "4ZhKHZH2S8tZ"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "nltk.download('punkt')\n",
        "nltk.download('stopwords')\n",
        "nltk.download(\"wordnet\")\n",
        "nlp = spacy.load('es_core_news_sm')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "__ELJWC9TEsW",
        "outputId": "09a72b00-409b-4b0d-8dba-ac719aefb52c"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[nltk_data] Downloading package punkt to /root/nltk_data...\n",
            "[nltk_data]   Unzipping tokenizers/punkt.zip.\n",
            "[nltk_data] Downloading package stopwords to /root/nltk_data...\n",
            "[nltk_data]   Unzipping corpora/stopwords.zip.\n",
            "[nltk_data] Downloading package wordnet to /root/nltk_data...\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gubQkmGDrlj2"
      },
      "source": [
        "## Acceso a los tuits\n",
        "\n",
        "Obtenemos acceso a los tuits."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "b4gxgvr8HSxx"
      },
      "outputs": [],
      "source": [
        "# Comando curl\n",
        "#Para obtener datos de una URL y luego decodifica la salida de ese comando como un objeto JSON\n",
        "curl_command = \"\"\"\n",
        "curl -X GET \"https://datasets-server.huggingface.co/rows?dataset=pysentimiento%2Fspanish-tweets&config=default&split=train&offset=0&length=100\"\n",
        "\"\"\"\n",
        "\n",
        "# Ejecutar el comando curl\n",
        "result = subprocess.run(curl_command, shell=True, capture_output=True, text=True)\n",
        "\n",
        "# Convertir el resultado a un string (suponiendo que el output es JSON)\n",
        "data_json = json.loads(result.stdout)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "N7AoxFY7HSxy",
        "outputId": "3732d197-53fb-45da-c003-844d5e167b66"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                tuits\n",
              "0   @Liz_Mile Y después dices que no eres fan... h...\n",
              "1   @Liz_Mile @Yaniserrano @ChasKapop Jajajaja si ...\n",
              "2   Hay que tener pulso nivel 500 para darle con e...\n",
              "3   @Liz_Mile Otro chino mas?!!!!! https://t.co/Ls...\n",
              "4                      @Yaniserrano Más extensiones 🤣\n",
              "..                                                ...\n",
              "95  Sera que se tomaron la foto alli cuando los ch...\n",
              "96  Fluir bien, hacer las cosas lo mejor que se pu...\n",
              "97  No les enseñaron que lo mínimo es saludar y da...\n",
              "98  Dice que me superó pero crea perfiles falsos e...\n",
              "99                            https://t.co/NroMRMZeXb\n",
              "\n",
              "[100 rows x 1 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3e708cd0-9b12-439e-8755-f3c254c766a4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>tuits</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>@Liz_Mile Y después dices que no eres fan... h...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>@Liz_Mile @Yaniserrano @ChasKapop Jajajaja si ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Hay que tener pulso nivel 500 para darle con e...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>@Liz_Mile Otro chino mas?!!!!! https://t.co/Ls...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>@Yaniserrano Más extensiones 🤣</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>Sera que se tomaron la foto alli cuando los ch...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>Fluir bien, hacer las cosas lo mejor que se pu...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>No les enseñaron que lo mínimo es saludar y da...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>Dice que me superó pero crea perfiles falsos e...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>https://t.co/NroMRMZeXb</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 1 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e708cd0-9b12-439e-8755-f3c254c766a4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3e708cd0-9b12-439e-8755-f3c254c766a4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3e708cd0-9b12-439e-8755-f3c254c766a4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b32f4a88-8599-4a10-8f67-681ee74e78b9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b32f4a88-8599-4a10-8f67-681ee74e78b9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b32f4a88-8599-4a10-8f67-681ee74e78b9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_a51f913c-151e-4f72-8858-2dd198b4bf9b\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('texts_df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_a51f913c-151e-4f72-8858-2dd198b4bf9b button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('texts_df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "texts_df",
              "summary": "{\n  \"name\": \"texts_df\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"tuits\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"Que no se vayan esas ganas bonitas de escribir\",\n          \"Adi\\u00f3s amor, again\",\n          \"Mi carrera me llena taaaaaanto \\u2764\\ufe0f\\ud83e\\udd70 aunque me hace llorar demasiado\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ],
      "source": [
        "# se convierte la estructura json a dataframe\n",
        "texts = []\n",
        "for i in data_json['rows']:\n",
        "    texts.append(i['row']['text'])\n",
        "\n",
        "texts_df = pd.DataFrame(texts, columns=['tuits'])\n",
        "texts_df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ANPe-CsLHSxz",
        "outputId": "fc44ecd1-6ea3-4f41-a77e-f2a12a8b0f30"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0     @Liz_Mile Y después dices que no eres fan... h...\n",
            "1     @Liz_Mile @Yaniserrano @ChasKapop Jajajaja si ...\n",
            "2     Hay que tener pulso nivel 500 para darle con e...\n",
            "3     @Liz_Mile Otro chino mas?!!!!! https://t.co/Ls...\n",
            "4                        @Yaniserrano Más extensiones 🤣\n",
            "                            ...                        \n",
            "95    Sera que se tomaron la foto alli cuando los ch...\n",
            "96    Fluir bien, hacer las cosas lo mejor que se pu...\n",
            "97    No les enseñaron que lo mínimo es saludar y da...\n",
            "98    Dice que me superó pero crea perfiles falsos e...\n",
            "99                              https://t.co/NroMRMZeXb\n",
            "Name: tuits, Length: 100, dtype: object\n"
          ]
        }
      ],
      "source": [
        "print(texts_df.tuits)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ltmfvZgXHSx0"
      },
      "source": [
        "#### 1. Limpieza de tuits"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "A cada tuit de manera independiente aplique las siguientes etapas de limpieza (crear una nueva columna llamada `cleaned_tuits`):\n",
        "\n",
        "* Convertir a minisculas todas las letras.\n",
        "* Remover Urls del texto.\n",
        "* Remover usuarios (@) y hashtags (#).\n",
        "* Remover caracteres repetidos más de 2 veces.\n",
        "* Remover todos los emojis.\n",
        "* Remover spacios en blanco adicionales (a los lados)."
      ],
      "metadata": {
        "id": "-bCLvdnmUQgj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "import emoji\n",
        "\n",
        "def remove_urls(text): #encontrar y eliminar todas las URLs\n",
        "   return re.sub(r'http\\S+', '', text)\n",
        "\n",
        "def remove_users_hashtags(text): #encontrar y eliminar usuarios (iniciados con @) y hashtags\n",
        "   return re.sub(r'@\\S+|#\\S+', '', text)\n",
        "\n",
        "def remove_repeated_chars(text): # encontrar y reemplazar caracteres repetidos más de dos veces\n",
        "   return re.sub(r'(.)\\1{2,}', r'\\1\\1', text)\n",
        "\n",
        "def remove_emojis(text): #reemplazar todos los emojis presentes en el texto con una cadena vacía\n",
        "   return emoji.replace_emoji(text, replace='')\n",
        "\n",
        "#Creacion de la funcion completa con toda la limpieza\n",
        "def clean_tuits(tuits):\n",
        "   cleaned_tuits = []\n",
        "   for tuit in tuits:\n",
        "       cleaned_tuit = tuit.lower()\n",
        "       cleaned_tuit = remove_urls(cleaned_tuit)\n",
        "       cleaned_tuit = remove_users_hashtags(cleaned_tuit)\n",
        "       cleaned_tuit = remove_repeated_chars(cleaned_tuit)\n",
        "       cleaned_tuit = remove_emojis(cleaned_tuit)\n",
        "       cleaned_tuit = cleaned_tuit.strip()\n",
        "       cleaned_tuits.append(cleaned_tuit)\n",
        "   return cleaned_tuits\n",
        "\n",
        "texts_df['cleaned_tuits'] = clean_tuits(texts_df['tuits'])\n",
        "texts_df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "WJLGfPJ1RHLL",
        "outputId": "7a63cdaf-18c7-4f76-f1bf-da95fbe594fb"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                               tuits  \\\n",
              "0  @Liz_Mile Y después dices que no eres fan... h...   \n",
              "1  @Liz_Mile @Yaniserrano @ChasKapop Jajajaja si ...   \n",
              "2  Hay que tener pulso nivel 500 para darle con e...   \n",
              "3  @Liz_Mile Otro chino mas?!!!!! https://t.co/Ls...   \n",
              "4                     @Yaniserrano Más extensiones 🤣   \n",
              "\n",
              "                                       cleaned_tuits  \n",
              "0                  y después dices que no eres fan..  \n",
              "1  jajajaja si se deja crecer el cabello estaría ...  \n",
              "2  hay que tener pulso nivel 500 para darle con e...  \n",
              "3                                  otro chino mas?!!  \n",
              "4                                    más extensiones  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-352d8c8f-0538-4276-b7f4-524ee29252b7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>tuits</th>\n",
              "      <th>cleaned_tuits</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>@Liz_Mile Y después dices que no eres fan... h...</td>\n",
              "      <td>y después dices que no eres fan..</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>@Liz_Mile @Yaniserrano @ChasKapop Jajajaja si ...</td>\n",
              "      <td>jajajaja si se deja crecer el cabello estaría ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Hay que tener pulso nivel 500 para darle con e...</td>\n",
              "      <td>hay que tener pulso nivel 500 para darle con e...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>@Liz_Mile Otro chino mas?!!!!! https://t.co/Ls...</td>\n",
              "      <td>otro chino mas?!!</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>@Yaniserrano Más extensiones 🤣</td>\n",
              "      <td>más extensiones</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-352d8c8f-0538-4276-b7f4-524ee29252b7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-352d8c8f-0538-4276-b7f4-524ee29252b7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-352d8c8f-0538-4276-b7f4-524ee29252b7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d852f2b3-f079-40cb-938b-132f81305c3c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d852f2b3-f079-40cb-938b-132f81305c3c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d852f2b3-f079-40cb-938b-132f81305c3c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "texts_df",
              "summary": "{\n  \"name\": \"texts_df\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"tuits\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"Que no se vayan esas ganas bonitas de escribir\",\n          \"Adi\\u00f3s amor, again\",\n          \"Mi carrera me llena taaaaaanto \\u2764\\ufe0f\\ud83e\\udd70 aunque me hace llorar demasiado\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cleaned_tuits\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 94,\n        \"samples\": [\n          \"total\",\n          \"jajajajaja qu\\u00e9? army no duerme si es necesario\",\n          \"quedas como una rid\\u00edcula, con personas como vs no me gasto en hablar.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fmCVy6dV2pgO"
      },
      "source": [
        "#### 2. Word tokenizer o TweetTokenizer\n",
        "\n",
        "Divida tuit limpio en word tokens usando la librería word_tokenize o TweetTokenizer y guarde el resultado en una nueva columna llamada `tokens`.\n",
        "\n",
        "¿Cuántos tokens únicos hay usando todos los tuits?"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from nltk.tokenize import word_tokenize\n",
        "\n",
        "# Crear una nueva columna 'tokens' con los tokens de cada tuit limpio\n",
        "texts_df['tokens'] = texts_df['cleaned_tuits'].apply(word_tokenize)\n",
        "\n",
        "# Obtener la lista de todos los tokens únicos\n",
        "all_tokens = list(set(chain(*texts_df['tokens'].tolist())))\n",
        "\n",
        "# Contar la cantidad de tokens únicos\n",
        "num_unique_tokens = len(all_tokens)\n",
        "\n",
        "print(f\"Cantidad de tokens únicos: {num_unique_tokens}\")\n",
        "\n",
        "# Mostrar las columnas 'tuits', 'cleaned_tuits' y 'tokens'\n",
        "texts_df[['tuits', 'cleaned_tuits', 'tokens']].head(100)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 441
        },
        "id": "-IqYoIVUS7rp",
        "outputId": "b5cea173-388a-41d5-fe9a-9b19a1549a83"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cantidad de tokens únicos: 575\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                tuits  \\\n",
              "0   @Liz_Mile Y después dices que no eres fan... h...   \n",
              "1   @Liz_Mile @Yaniserrano @ChasKapop Jajajaja si ...   \n",
              "2   Hay que tener pulso nivel 500 para darle con e...   \n",
              "3   @Liz_Mile Otro chino mas?!!!!! https://t.co/Ls...   \n",
              "4                      @Yaniserrano Más extensiones 🤣   \n",
              "..                                                ...   \n",
              "95  Sera que se tomaron la foto alli cuando los ch...   \n",
              "96  Fluir bien, hacer las cosas lo mejor que se pu...   \n",
              "97  No les enseñaron que lo mínimo es saludar y da...   \n",
              "98  Dice que me superó pero crea perfiles falsos e...   \n",
              "99                            https://t.co/NroMRMZeXb   \n",
              "\n",
              "                                        cleaned_tuits  \\\n",
              "0                   y después dices que no eres fan..   \n",
              "1   jajajaja si se deja crecer el cabello estaría ...   \n",
              "2   hay que tener pulso nivel 500 para darle con e...   \n",
              "3                                   otro chino mas?!!   \n",
              "4                                     más extensiones   \n",
              "..                                                ...   \n",
              "95  sera que se tomaron la foto alli cuando los ch...   \n",
              "96  fluir bien, hacer las cosas lo mejor que se pu...   \n",
              "97  no les enseñaron que lo mínimo es saludar y da...   \n",
              "98  dice que me superó pero crea perfiles falsos e...   \n",
              "99                                                      \n",
              "\n",
              "                                               tokens  \n",
              "0         [y, después, dices, que, no, eres, fan, ..]  \n",
              "1   [jajajaja, si, se, deja, crecer, el, cabello, ...  \n",
              "2   [hay, que, tener, pulso, nivel, 500, para, dar...  \n",
              "3                         [otro, chino, mas, ?, !, !]  \n",
              "4                                  [más, extensiones]  \n",
              "..                                                ...  \n",
              "95  [sera, que, se, tomaron, la, foto, alli, cuand...  \n",
              "96  [fluir, bien, ,, hacer, las, cosas, lo, mejor,...  \n",
              "97  [no, les, enseñaron, que, lo, mínimo, es, salu...  \n",
              "98  [dice, que, me, superó, pero, crea, perfiles, ...  \n",
              "99                                                 []  \n",
              "\n",
              "[100 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2b0627d0-9508-4554-8b4d-69ac842a5d73\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>tuits</th>\n",
              "      <th>cleaned_tuits</th>\n",
              "      <th>tokens</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>@Liz_Mile Y después dices que no eres fan... h...</td>\n",
              "      <td>y después dices que no eres fan..</td>\n",
              "      <td>[y, después, dices, que, no, eres, fan, ..]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>@Liz_Mile @Yaniserrano @ChasKapop Jajajaja si ...</td>\n",
              "      <td>jajajaja si se deja crecer el cabello estaría ...</td>\n",
              "      <td>[jajajaja, si, se, deja, crecer, el, cabello, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Hay que tener pulso nivel 500 para darle con e...</td>\n",
              "      <td>hay que tener pulso nivel 500 para darle con e...</td>\n",
              "      <td>[hay, que, tener, pulso, nivel, 500, para, dar...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>@Liz_Mile Otro chino mas?!!!!! https://t.co/Ls...</td>\n",
              "      <td>otro chino mas?!!</td>\n",
              "      <td>[otro, chino, mas, ?, !, !]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>@Yaniserrano Más extensiones 🤣</td>\n",
              "      <td>más extensiones</td>\n",
              "      <td>[más, extensiones]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>Sera que se tomaron la foto alli cuando los ch...</td>\n",
              "      <td>sera que se tomaron la foto alli cuando los ch...</td>\n",
              "      <td>[sera, que, se, tomaron, la, foto, alli, cuand...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>Fluir bien, hacer las cosas lo mejor que se pu...</td>\n",
              "      <td>fluir bien, hacer las cosas lo mejor que se pu...</td>\n",
              "      <td>[fluir, bien, ,, hacer, las, cosas, lo, mejor,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>No les enseñaron que lo mínimo es saludar y da...</td>\n",
              "      <td>no les enseñaron que lo mínimo es saludar y da...</td>\n",
              "      <td>[no, les, enseñaron, que, lo, mínimo, es, salu...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>Dice que me superó pero crea perfiles falsos e...</td>\n",
              "      <td>dice que me superó pero crea perfiles falsos e...</td>\n",
              "      <td>[dice, que, me, superó, pero, crea, perfiles, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>https://t.co/NroMRMZeXb</td>\n",
              "      <td></td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 3 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2b0627d0-9508-4554-8b4d-69ac842a5d73')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2b0627d0-9508-4554-8b4d-69ac842a5d73 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2b0627d0-9508-4554-8b4d-69ac842a5d73');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-85148fa6-ade6-4ffd-b35d-1ae5c96b098c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-85148fa6-ade6-4ffd-b35d-1ae5c96b098c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-85148fa6-ade6-4ffd-b35d-1ae5c96b098c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"texts_df[['tuits', 'cleaned_tuits', 'tokens']]\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"tuits\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"Que no se vayan esas ganas bonitas de escribir\",\n          \"Adi\\u00f3s amor, again\",\n          \"Mi carrera me llena taaaaaanto \\u2764\\ufe0f\\ud83e\\udd70 aunque me hace llorar demasiado\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cleaned_tuits\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 94,\n        \"samples\": [\n          \"total\",\n          \"jajajajaja qu\\u00e9? army no duerme si es necesario\",\n          \"quedas como una rid\\u00edcula, con personas como vs no me gasto en hablar.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tokens\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Calcule la frecuencia de los tokens usando la función `nltk.FreqDist` y gráfique los 50 primeros."
      ],
      "metadata": {
        "id": "YW3uAJFKYTxx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import nltk\n",
        "from nltk.probability import FreqDist\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Obtener todos los tokens en una lista plana\n",
        "all_tokens = [token for sublist in texts_df['tokens'] for token in sublist]\n",
        "\n",
        "# Calcular la frecuencia de los tokens\n",
        "freq_dist = FreqDist(all_tokens)\n",
        "\n",
        "# Obtener los 50 tokens más frecuentes\n",
        "top_50_tokens = freq_dist.most_common(50)\n",
        "\n",
        "# Crear un diccionario con los tokens y sus frecuencias\n",
        "tokens, frequencies = zip(*top_50_tokens)\n",
        "\n",
        "# Graficar la frecuencia de los tokens como una línea sin puntos\n",
        "plt.figure(figsize=(12, 6))\n",
        "plt.plot(tokens, frequencies, linestyle='-', color='r')\n",
        "plt.title('Frecuencia de los 50 Tokens Más Frecuentes')\n",
        "plt.xlabel('Tokens')\n",
        "plt.ylabel('Frecuencia')\n",
        "plt.xticks(rotation=90)\n",
        "plt.grid(True)\n",
        "plt.show()\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 601
        },
        "id": "45vxpzCjfy0G",
        "outputId": "51af2f45-4b6f-4c51-bd89-8efd390130b4"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "3. Elimine las stop words en español.\n",
        "\n"
      ],
      "metadata": {
        "id": "g9cHNcI8UVoT"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Elimine las stop words en español (mantenga la palabra no) y guardelas en una nueva columna llamada `cleaned_tokens`."
      ],
      "metadata": {
        "id": "SKhpEkRFZVp4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from nltk.corpus import stopwords\n",
        "from itertools import chain\n",
        "\n",
        "# Obtener la lista de stop words en español\n",
        "spanish_stopwords = stopwords.words('spanish')\n",
        "\n",
        "# Eliminar la palabra 'no' de la lista de stop words\n",
        "spanish_stopwords.remove('no')\n",
        "\n",
        "# Crear una nueva columna 'cleaned_tokens' sin stop words\n",
        "texts_df['cleaned_tokens'] = texts_df['tokens'].apply(lambda tokens: [token for token in tokens if token not in spanish_stopwords])\n",
        "\n",
        "# Obtener la lista de todos los tokens únicos sin stop words\n",
        "all_cleaned_tokens = list(set(chain(*texts_df['cleaned_tokens'].tolist())))\n",
        "\n",
        "# Contar la cantidad de tokens únicos sin stop words\n",
        "num_unique_cleaned_tokens = len(all_cleaned_tokens)\n",
        "\n",
        "print(f\"Cantidad de tokens únicos sin stop words: {num_unique_cleaned_tokens}\")\n",
        "\n",
        "# Mostrar las primeras filas de la nueva columna\n",
        "texts_df[['tuits', 'cleaned_tuits', 'tokens', 'cleaned_tokens']].head(100)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 441
        },
        "id": "h50OFFBqU_PZ",
        "outputId": "f2afd729-9244-43b3-dcf0-8ec0cc81f9cb"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cantidad de tokens únicos sin stop words: 490\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                tuits  \\\n",
              "0   @Liz_Mile Y después dices que no eres fan... h...   \n",
              "1   @Liz_Mile @Yaniserrano @ChasKapop Jajajaja si ...   \n",
              "2   Hay que tener pulso nivel 500 para darle con e...   \n",
              "3   @Liz_Mile Otro chino mas?!!!!! https://t.co/Ls...   \n",
              "4                      @Yaniserrano Más extensiones 🤣   \n",
              "..                                                ...   \n",
              "95  Sera que se tomaron la foto alli cuando los ch...   \n",
              "96  Fluir bien, hacer las cosas lo mejor que se pu...   \n",
              "97  No les enseñaron que lo mínimo es saludar y da...   \n",
              "98  Dice que me superó pero crea perfiles falsos e...   \n",
              "99                            https://t.co/NroMRMZeXb   \n",
              "\n",
              "                                        cleaned_tuits  \\\n",
              "0                   y después dices que no eres fan..   \n",
              "1   jajajaja si se deja crecer el cabello estaría ...   \n",
              "2   hay que tener pulso nivel 500 para darle con e...   \n",
              "3                                   otro chino mas?!!   \n",
              "4                                     más extensiones   \n",
              "..                                                ...   \n",
              "95  sera que se tomaron la foto alli cuando los ch...   \n",
              "96  fluir bien, hacer las cosas lo mejor que se pu...   \n",
              "97  no les enseñaron que lo mínimo es saludar y da...   \n",
              "98  dice que me superó pero crea perfiles falsos e...   \n",
              "99                                                      \n",
              "\n",
              "                                               tokens  \\\n",
              "0         [y, después, dices, que, no, eres, fan, ..]   \n",
              "1   [jajajaja, si, se, deja, crecer, el, cabello, ...   \n",
              "2   [hay, que, tener, pulso, nivel, 500, para, dar...   \n",
              "3                         [otro, chino, mas, ?, !, !]   \n",
              "4                                  [más, extensiones]   \n",
              "..                                                ...   \n",
              "95  [sera, que, se, tomaron, la, foto, alli, cuand...   \n",
              "96  [fluir, bien, ,, hacer, las, cosas, lo, mejor,...   \n",
              "97  [no, les, enseñaron, que, lo, mínimo, es, salu...   \n",
              "98  [dice, que, me, superó, pero, crea, perfiles, ...   \n",
              "99                                                 []   \n",
              "\n",
              "                                       cleaned_tokens  \n",
              "0                       [después, dices, no, fan, ..]  \n",
              "1   [jajajaja, si, deja, crecer, cabello, bien, gu...  \n",
              "2   [tener, pulso, nivel, 500, darle, exactitud, ,...  \n",
              "3                               [chino, mas, ?, !, !]  \n",
              "4                                       [extensiones]  \n",
              "..                                                ...  \n",
              "95  [sera, tomaron, foto, alli, chicos, grabando, ...  \n",
              "96  [fluir, bien, ,, hacer, cosas, mejor, pueda, h...  \n",
              "97  [no, enseñaron, mínimo, saludar, dar, gracias,...  \n",
              "98  [dice, superó, crea, perfiles, falsos, grindr,...  \n",
              "99                                                 []  \n",
              "\n",
              "[100 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-56b171b7-49ad-44a1-a6c4-28c9072b5cee\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>tuits</th>\n",
              "      <th>cleaned_tuits</th>\n",
              "      <th>tokens</th>\n",
              "      <th>cleaned_tokens</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>@Liz_Mile Y después dices que no eres fan... h...</td>\n",
              "      <td>y después dices que no eres fan..</td>\n",
              "      <td>[y, después, dices, que, no, eres, fan, ..]</td>\n",
              "      <td>[después, dices, no, fan, ..]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>@Liz_Mile @Yaniserrano @ChasKapop Jajajaja si ...</td>\n",
              "      <td>jajajaja si se deja crecer el cabello estaría ...</td>\n",
              "      <td>[jajajaja, si, se, deja, crecer, el, cabello, ...</td>\n",
              "      <td>[jajajaja, si, deja, crecer, cabello, bien, gu...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Hay que tener pulso nivel 500 para darle con e...</td>\n",
              "      <td>hay que tener pulso nivel 500 para darle con e...</td>\n",
              "      <td>[hay, que, tener, pulso, nivel, 500, para, dar...</td>\n",
              "      <td>[tener, pulso, nivel, 500, darle, exactitud, ,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>@Liz_Mile Otro chino mas?!!!!! https://t.co/Ls...</td>\n",
              "      <td>otro chino mas?!!</td>\n",
              "      <td>[otro, chino, mas, ?, !, !]</td>\n",
              "      <td>[chino, mas, ?, !, !]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>@Yaniserrano Más extensiones 🤣</td>\n",
              "      <td>más extensiones</td>\n",
              "      <td>[más, extensiones]</td>\n",
              "      <td>[extensiones]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>Sera que se tomaron la foto alli cuando los ch...</td>\n",
              "      <td>sera que se tomaron la foto alli cuando los ch...</td>\n",
              "      <td>[sera, que, se, tomaron, la, foto, alli, cuand...</td>\n",
              "      <td>[sera, tomaron, foto, alli, chicos, grabando, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>Fluir bien, hacer las cosas lo mejor que se pu...</td>\n",
              "      <td>fluir bien, hacer las cosas lo mejor que se pu...</td>\n",
              "      <td>[fluir, bien, ,, hacer, las, cosas, lo, mejor,...</td>\n",
              "      <td>[fluir, bien, ,, hacer, cosas, mejor, pueda, h...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>No les enseñaron que lo mínimo es saludar y da...</td>\n",
              "      <td>no les enseñaron que lo mínimo es saludar y da...</td>\n",
              "      <td>[no, les, enseñaron, que, lo, mínimo, es, salu...</td>\n",
              "      <td>[no, enseñaron, mínimo, saludar, dar, gracias,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>Dice que me superó pero crea perfiles falsos e...</td>\n",
              "      <td>dice que me superó pero crea perfiles falsos e...</td>\n",
              "      <td>[dice, que, me, superó, pero, crea, perfiles, ...</td>\n",
              "      <td>[dice, superó, crea, perfiles, falsos, grindr,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>https://t.co/NroMRMZeXb</td>\n",
              "      <td></td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 4 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-56b171b7-49ad-44a1-a6c4-28c9072b5cee')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-56b171b7-49ad-44a1-a6c4-28c9072b5cee button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-56b171b7-49ad-44a1-a6c4-28c9072b5cee');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-def2479c-0c23-4fc4-8e34-0b7237d8f147\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-def2479c-0c23-4fc4-8e34-0b7237d8f147')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-def2479c-0c23-4fc4-8e34-0b7237d8f147 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"texts_df[['tuits', 'cleaned_tuits', 'tokens', 'cleaned_tokens']]\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"tuits\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"Que no se vayan esas ganas bonitas de escribir\",\n          \"Adi\\u00f3s amor, again\",\n          \"Mi carrera me llena taaaaaanto \\u2764\\ufe0f\\ud83e\\udd70 aunque me hace llorar demasiado\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cleaned_tuits\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 94,\n        \"samples\": [\n          \"total\",\n          \"jajajajaja qu\\u00e9? army no duerme si es necesario\",\n          \"quedas como una rid\\u00edcula, con personas como vs no me gasto en hablar.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tokens\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cleaned_tokens\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "De manera similar al anterior grafico, Calcule la frecuencia de los tokens sin las stop words usando la función `nltk.FreqDist` y gráfique los 50 primeros. ¿Qué diferencias logra encontrar con respecto al anterior gráfico?"
      ],
      "metadata": {
        "id": "VApuKTucaP44"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "from nltk import FreqDist\n",
        "\n",
        "# Obtener la lista de todos los tokens sin stop words\n",
        "all_cleaned_tokens = [token for tokens in texts_df['cleaned_tokens'] for token in tokens]\n",
        "\n",
        "# Calcular la frecuencia de los tokens sin stop words\n",
        "freq_dist_cleaned = FreqDist(all_cleaned_tokens)\n",
        "\n",
        "# Obtener los 50 tokens sin stop words más frecuentes\n",
        "most_frequent_cleaned_tokens = freq_dist_cleaned.most_common(50)\n",
        "\n",
        "# Gráficar los 50 tokens sin stop words más frecuentes\n",
        "cleaned_token_freqs = [freq for token, freq in most_frequent_cleaned_tokens]\n",
        "cleaned_token_words = [token for token, freq in most_frequent_cleaned_tokens]\n",
        "\n",
        "plt.figure(figsize=(12, 6))\n",
        "plt.plot(cleaned_token_words, cleaned_token_freqs, linestyle='-', marker='', color='r')\n",
        "plt.xticks(rotation=90)\n",
        "plt.xlabel('Tokens')\n",
        "plt.ylabel('Frecuencia')\n",
        "plt.title('Frecuencia de los 50 tokens más comunes sin stop words')\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 607
        },
        "id": "Zi9OXwb4W6WA",
        "outputId": "a041b459-2bb9-4d5b-cb04-f72872683dce"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se puede observar que los tokens que se eliminaron palabras poco importantes o poco significativas ayudo que se identificar las palabras que tienden a tener un mayor significado y ver la frecuencia con la cual se utilizan en el tuits dentro de la base"
      ],
      "metadata": {
        "id": "XcxGEbgbdgvg"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5MUzy6UI8qIb"
      },
      "source": [
        "#### 4. Lematización\n",
        "\n",
        "Use el lematizador de la librería `spacy` para lematizar los tokens guardados en la columna `cleaned_tokens` y guardelos en una nueva columna llamada `lemmatize_tokens`."
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "from nltk import FreqDist\n",
        "import spacy\n",
        "\n",
        "# Cargar el modelo de spaCy para el español\n",
        "nlp = spacy.load('es_core_news_sm')\n",
        "\n",
        "# Crear una función para lematizar los tokens\n",
        "def lemmatize_tokens(tokens):\n",
        "    lemmatized = []\n",
        "    for token in tokens:\n",
        "        doc = nlp(token)\n",
        "        lemmatized.append(doc[0].lemma_)\n",
        "    return lemmatized\n",
        "\n",
        "# Aplicar la lematización a la columna 'cleaned_tokens'\n",
        "texts_df['lemmatize_tokens'] = texts_df['cleaned_tokens'].apply(lemmatize_tokens)\n",
        "\n",
        "# Obtener la lista de todos los tokens sin stop words\n",
        "all_cleaned_tokens = [token for tokens in texts_df['cleaned_tokens'] for token in tokens]\n",
        "\n",
        "# Calcular la frecuencia de los tokens sin stop words\n",
        "freq_dist_cleaned = FreqDist(all_cleaned_tokens)\n",
        "\n",
        "# Obtener los 50 tokens sin stop words más frecuentes\n",
        "most_frequent_cleaned_tokens = freq_dist_cleaned.most_common(50)\n",
        "\n",
        "# Número de tokens lematizados únicos\n",
        "unique_lemmatized_tokens = len(set([token for tokens in texts_df['lemmatize_tokens'] for token in tokens]))\n",
        "\n",
        "# Mostrar las primeras filas de la nueva columna\n",
        "print(\"Número de tokens lematizados únicos:\", unique_lemmatized_tokens)\n",
        "texts_df[['tuits', 'cleaned_tuits','tokens', 'cleaned_tokens', 'lemmatize_tokens']].head(100)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 580
        },
        "id": "bIkmd08oZ-Dg",
        "outputId": "3974cd76-6ab1-4ff4-ca1a-29fb05b3ab04"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Número de tokens lematizados únicos: 449\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                tuits  \\\n",
              "0   @Liz_Mile Y después dices que no eres fan... h...   \n",
              "1   @Liz_Mile @Yaniserrano @ChasKapop Jajajaja si ...   \n",
              "2   Hay que tener pulso nivel 500 para darle con e...   \n",
              "3   @Liz_Mile Otro chino mas?!!!!! https://t.co/Ls...   \n",
              "4                      @Yaniserrano Más extensiones 🤣   \n",
              "..                                                ...   \n",
              "95  Sera que se tomaron la foto alli cuando los ch...   \n",
              "96  Fluir bien, hacer las cosas lo mejor que se pu...   \n",
              "97  No les enseñaron que lo mínimo es saludar y da...   \n",
              "98  Dice que me superó pero crea perfiles falsos e...   \n",
              "99                            https://t.co/NroMRMZeXb   \n",
              "\n",
              "                                        cleaned_tuits  \\\n",
              "0                   y después dices que no eres fan..   \n",
              "1   jajajaja si se deja crecer el cabello estaría ...   \n",
              "2   hay que tener pulso nivel 500 para darle con e...   \n",
              "3                                   otro chino mas?!!   \n",
              "4                                     más extensiones   \n",
              "..                                                ...   \n",
              "95  sera que se tomaron la foto alli cuando los ch...   \n",
              "96  fluir bien, hacer las cosas lo mejor que se pu...   \n",
              "97  no les enseñaron que lo mínimo es saludar y da...   \n",
              "98  dice que me superó pero crea perfiles falsos e...   \n",
              "99                                                      \n",
              "\n",
              "                                               tokens  \\\n",
              "0         [y, después, dices, que, no, eres, fan, ..]   \n",
              "1   [jajajaja, si, se, deja, crecer, el, cabello, ...   \n",
              "2   [hay, que, tener, pulso, nivel, 500, para, dar...   \n",
              "3                         [otro, chino, mas, ?, !, !]   \n",
              "4                                  [más, extensiones]   \n",
              "..                                                ...   \n",
              "95  [sera, que, se, tomaron, la, foto, alli, cuand...   \n",
              "96  [fluir, bien, ,, hacer, las, cosas, lo, mejor,...   \n",
              "97  [no, les, enseñaron, que, lo, mínimo, es, salu...   \n",
              "98  [dice, que, me, superó, pero, crea, perfiles, ...   \n",
              "99                                                 []   \n",
              "\n",
              "                                       cleaned_tokens  \\\n",
              "0                       [después, dices, no, fan, ..]   \n",
              "1   [jajajaja, si, deja, crecer, cabello, bien, gu...   \n",
              "2   [tener, pulso, nivel, 500, darle, exactitud, ,...   \n",
              "3                               [chino, mas, ?, !, !]   \n",
              "4                                       [extensiones]   \n",
              "..                                                ...   \n",
              "95  [sera, tomaron, foto, alli, chicos, grabando, ...   \n",
              "96  [fluir, bien, ,, hacer, cosas, mejor, pueda, h...   \n",
              "97  [no, enseñaron, mínimo, saludar, dar, gracias,...   \n",
              "98  [dice, superó, crea, perfiles, falsos, grindr,...   \n",
              "99                                                 []   \n",
              "\n",
              "                                     lemmatize_tokens  \n",
              "0                         [después, diz, no, fan, ..]  \n",
              "1   [jajajajar, si, dejar, crecer, cabello, bien, ...  \n",
              "2   [tener, pulso, nivel, 500, dar él, exactitud, ...  \n",
              "3                               [chino, mas, ?, !, !]  \n",
              "4                                         [extensión]  \n",
              "..                                                ...  \n",
              "95  [sero, tomar, foto, alli, chico, grabar, progr...  \n",
              "96  [fluir, bien, ,, hacer, cosa, mejor, poder, ha...  \n",
              "97  [no, enseñar, mínimo, saludar, dar, gracias, ?...  \n",
              "98  [decir, superar, creer, perfil, falso, grindr,...  \n",
              "99                                                 []  \n",
              "\n",
              "[100 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-99ef45f6-9141-4e71-bb4f-263feafe6d7e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>tuits</th>\n",
              "      <th>cleaned_tuits</th>\n",
              "      <th>tokens</th>\n",
              "      <th>cleaned_tokens</th>\n",
              "      <th>lemmatize_tokens</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>@Liz_Mile Y después dices que no eres fan... h...</td>\n",
              "      <td>y después dices que no eres fan..</td>\n",
              "      <td>[y, después, dices, que, no, eres, fan, ..]</td>\n",
              "      <td>[después, dices, no, fan, ..]</td>\n",
              "      <td>[después, diz, no, fan, ..]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>@Liz_Mile @Yaniserrano @ChasKapop Jajajaja si ...</td>\n",
              "      <td>jajajaja si se deja crecer el cabello estaría ...</td>\n",
              "      <td>[jajajaja, si, se, deja, crecer, el, cabello, ...</td>\n",
              "      <td>[jajajaja, si, deja, crecer, cabello, bien, gu...</td>\n",
              "      <td>[jajajajar, si, dejar, crecer, cabello, bien, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Hay que tener pulso nivel 500 para darle con e...</td>\n",
              "      <td>hay que tener pulso nivel 500 para darle con e...</td>\n",
              "      <td>[hay, que, tener, pulso, nivel, 500, para, dar...</td>\n",
              "      <td>[tener, pulso, nivel, 500, darle, exactitud, ,...</td>\n",
              "      <td>[tener, pulso, nivel, 500, dar él, exactitud, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>@Liz_Mile Otro chino mas?!!!!! https://t.co/Ls...</td>\n",
              "      <td>otro chino mas?!!</td>\n",
              "      <td>[otro, chino, mas, ?, !, !]</td>\n",
              "      <td>[chino, mas, ?, !, !]</td>\n",
              "      <td>[chino, mas, ?, !, !]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>@Yaniserrano Más extensiones 🤣</td>\n",
              "      <td>más extensiones</td>\n",
              "      <td>[más, extensiones]</td>\n",
              "      <td>[extensiones]</td>\n",
              "      <td>[extensión]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>Sera que se tomaron la foto alli cuando los ch...</td>\n",
              "      <td>sera que se tomaron la foto alli cuando los ch...</td>\n",
              "      <td>[sera, que, se, tomaron, la, foto, alli, cuand...</td>\n",
              "      <td>[sera, tomaron, foto, alli, chicos, grabando, ...</td>\n",
              "      <td>[sero, tomar, foto, alli, chico, grabar, progr...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>Fluir bien, hacer las cosas lo mejor que se pu...</td>\n",
              "      <td>fluir bien, hacer las cosas lo mejor que se pu...</td>\n",
              "      <td>[fluir, bien, ,, hacer, las, cosas, lo, mejor,...</td>\n",
              "      <td>[fluir, bien, ,, hacer, cosas, mejor, pueda, h...</td>\n",
              "      <td>[fluir, bien, ,, hacer, cosa, mejor, poder, ha...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>No les enseñaron que lo mínimo es saludar y da...</td>\n",
              "      <td>no les enseñaron que lo mínimo es saludar y da...</td>\n",
              "      <td>[no, les, enseñaron, que, lo, mínimo, es, salu...</td>\n",
              "      <td>[no, enseñaron, mínimo, saludar, dar, gracias,...</td>\n",
              "      <td>[no, enseñar, mínimo, saludar, dar, gracias, ?...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>Dice que me superó pero crea perfiles falsos e...</td>\n",
              "      <td>dice que me superó pero crea perfiles falsos e...</td>\n",
              "      <td>[dice, que, me, superó, pero, crea, perfiles, ...</td>\n",
              "      <td>[dice, superó, crea, perfiles, falsos, grindr,...</td>\n",
              "      <td>[decir, superar, creer, perfil, falso, grindr,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>https://t.co/NroMRMZeXb</td>\n",
              "      <td></td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 5 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-99ef45f6-9141-4e71-bb4f-263feafe6d7e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-99ef45f6-9141-4e71-bb4f-263feafe6d7e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-99ef45f6-9141-4e71-bb4f-263feafe6d7e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7c43c6d0-d3da-4887-9832-ec81a17a153e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7c43c6d0-d3da-4887-9832-ec81a17a153e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7c43c6d0-d3da-4887-9832-ec81a17a153e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"texts_df[['tuits', 'cleaned_tuits','tokens', 'cleaned_tokens', 'lemmatize_tokens']]\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"tuits\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"Que no se vayan esas ganas bonitas de escribir\",\n          \"Adi\\u00f3s amor, again\",\n          \"Mi carrera me llena taaaaaanto \\u2764\\ufe0f\\ud83e\\udd70 aunque me hace llorar demasiado\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cleaned_tuits\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 94,\n        \"samples\": [\n          \"total\",\n          \"jajajajaja qu\\u00e9? army no duerme si es necesario\",\n          \"quedas como una rid\\u00edcula, con personas como vs no me gasto en hablar.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tokens\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cleaned_tokens\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lemmatize_tokens\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Obtener la lista de todos los tokens lematizados\n",
        "all_lemmatized_tokens = [token for tokens in texts_df['lemmatize_tokens'] for token in tokens]\n",
        "\n",
        "# Calcular la frecuencia de los tokens lematizados\n",
        "freq_dist_lemmatized = FreqDist(all_lemmatized_tokens)\n",
        "\n",
        "# Obtener los 50 tokens lematizados más frecuentes\n",
        "most_frequent_lemmatized_tokens = freq_dist_lemmatized.most_common(50)\n",
        "\n",
        "# Extraer los tokens y sus frecuencias\n",
        "lemmatized_token_freqs = [freq for token, freq in most_frequent_lemmatized_tokens]\n",
        "lemmatized_token_words = [token for token, freq in most_frequent_lemmatized_tokens]\n",
        "\n",
        "# Gráficar los 50 tokens lematizados más frecuentes\n",
        "plt.figure(figsize=(12, 6))\n",
        "plt.plot(lemmatized_token_words, lemmatized_token_freqs, linestyle='-', marker='', color='r')\n",
        "plt.xticks(rotation=90)\n",
        "plt.xlabel('Tokens Lematizados')\n",
        "plt.ylabel('Frecuencia')\n",
        "plt.title('Frecuencia de los 50 tokens lematizados más comunes')\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 607
        },
        "id": "uB4sxdA3a98-",
        "outputId": "f218b4c7-31ee-409a-ddb8-2befcb2ab904"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MS6y_-1EvT1b"
      },
      "source": [
        "#### 5. Graficar una nube de palabras con la lista de tokens lematizados.\n",
        "\n",
        "Usando la librería `wordcloud` genere una nube de palabras con los tokens lematizados. ¿Cúales son más frecuentes?"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from wordcloud import WordCloud\n",
        "\n",
        "# Convertir la lista de tokens lematizados en un solo string\n",
        "lemmatized_text = ' '.join([token for tokens in texts_df['lemmatize_tokens'] for token in tokens])\n",
        "\n",
        "# Crear la nube de palabras\n",
        "wordcloud = WordCloud(width=800, height=400, background_color='white').generate(lemmatized_text)\n",
        "\n",
        "# Mostrar la nube de palabras\n",
        "plt.figure(figsize=(12, 6))\n",
        "plt.imshow(wordcloud, interpolation='bilinear')\n",
        "plt.axis('off')\n",
        "plt.title('Nube de palabras de tokens lematizados')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 521
        },
        "id": "PTd27T2ib0TY",
        "outputId": "35b5390f-ec5a-4b6b-9d73-72f732257f7d"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 6. Extracción de palabras importantes\n",
        "\n",
        "Para alcanzar el objetivo número 1, vamos a crear un algoritmo que determine la unicidad de una palabra dentro de la lista de tokens limpios. El objetivo es buscar palabras que tengan una frecuencia mayor en cada tuit pero que no esten en otros tuits. Ese tipo de palabras en ciertos contextos son útiles para representar oraciones entre otras cosas.\n",
        "\n",
        "Ejemplo de unicidad con valor de 1.0\n",
        "\n",
        "Imagina que tienes tres oraciones:\n",
        "\n",
        "    \"El rápido zorro marrón salta sobre el perro perezoso.\"\n",
        "    \"Los niños juegan en el parque durante el día.\"\n",
        "    \"La lluvia en España cae principalmente en la llanura.\"\n",
        "\n",
        "Si analizamos la palabra \"España\", y solo aparece en la tercera oración y en ninguna otra, entonces su unicidad sería de 1.0 para esa oración."
      ],
      "metadata": {
        "id": "s7ad_jVjipRn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "## No modificar este código\n",
        "def calcular_unicidad(oraciones):\n",
        "    frecuencia_total = {}\n",
        "    frecuencia_oracion = [{} for _ in oraciones]\n",
        "\n",
        "    # Calcular frecuencias básicas\n",
        "    for index, oracion in enumerate(oraciones):\n",
        "        palabras = oracion.split()\n",
        "        for palabra in palabras:\n",
        "            frecuencia_total[palabra] = frecuencia_total.get(palabra, 0) + 1\n",
        "            if palabra in frecuencia_oracion[index]:\n",
        "                frecuencia_oracion[index][palabra] += 1\n",
        "            else:\n",
        "                frecuencia_oracion[index][palabra] = 1\n",
        "\n",
        "    # Calcular la métrica de unicidad para cada palabra en cada oración\n",
        "    unicidad_simple = []\n",
        "    for frec in frecuencia_oracion:\n",
        "        doc_unicidad = {}\n",
        "        for palabra, count in frec.items():\n",
        "            doc_unicidad[palabra] = count / frecuencia_total[palabra]\n",
        "        unicidad_simple.append(doc_unicidad)\n",
        "\n",
        "    return unicidad_simple"
      ],
      "metadata": {
        "id": "zfn10I8vjnzI"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "## No modificar este código\n",
        "oraciones = texts_df.cleaned_tokens.apply(lambda x: ' '.join(x)).values\n",
        "unicidad_simple = calcular_unicidad(oraciones)\n",
        "\n",
        "unicidad_simple"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PlpExOKmjn2K",
        "outputId": "1ddab331-a4a5-4738-b8f0-4e77ca422e10"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[{'después': 0.5,\n",
              "  'dices': 1.0,\n",
              "  'no': 0.03571428571428571,\n",
              "  'fan': 0.5,\n",
              "  '..': 0.25},\n",
              " {'jajajaja': 0.3333333333333333,\n",
              "  'si': 0.09090909090909091,\n",
              "  'deja': 1.0,\n",
              "  'crecer': 1.0,\n",
              "  'cabello': 1.0,\n",
              "  'bien': 0.2,\n",
              "  'gusta': 0.25,\n",
              "  'idea': 1.0,\n",
              "  '100': 1.0,\n",
              "  '%': 1.0,\n",
              "  '?': 0.08333333333333333,\n",
              "  'veces': 0.3333333333333333,\n",
              "  'usaba': 1.0,\n",
              "  'extensiones': 0.5},\n",
              " {'tener': 0.2,\n",
              "  'pulso': 1.0,\n",
              "  'nivel': 1.0,\n",
              "  '500': 1.0,\n",
              "  'darle': 1.0,\n",
              "  'exactitud': 1.0,\n",
              "  ',': 0.06382978723404255,\n",
              "  'parece': 1.0,\n",
              "  'fácil': 1.0,\n",
              "  'no': 0.03571428571428571,\n",
              "  'experimente': 1.0,\n",
              "  'engreído': 1.0,\n",
              "  'casa': 0.2,\n",
              "  'hizo': 1.0,\n",
              "  'ulcera': 1.0,\n",
              "  'parecer': 0.5,\n",
              "  'rama': 1.0,\n",
              "  'solo': 0.5,\n",
              "  '1': 1.0,\n",
              "  'vez': 0.5,\n",
              "  'logré': 0.5,\n",
              "  'aplicarle': 1.0,\n",
              "  'gota': 1.0,\n",
              "  'despierto': 1.0,\n",
              "  'aprovechaba': 1.0,\n",
              "  'dormido': 1.0,\n",
              "  'ojo': 0.5,\n",
              "  'entreabierto': 1.0},\n",
              " {'chino': 1.0, 'mas': 0.5, '?': 0.08333333333333333, '!': 0.2857142857142857},\n",
              " {'extensiones': 0.5},\n",
              " {'calidad': 1.0, 'xd': 0.5},\n",
              " {'x2': 1.0, 'khj': 1.0, 'debe': 1.0, 'papel': 1.0, 'villano': 1.0},\n",
              " {'pou': 1.0, 'loquillo': 1.0, 'xd': 0.5},\n",
              " {'eleven': 1.0,\n",
              "  'stacked': 1.0,\n",
              "  'matches': 1.0,\n",
              "  'are': 1.0,\n",
              "  'ready': 1.0,\n",
              "  'for': 1.0,\n",
              "  'your': 1.0,\n",
              "  'viewing': 1.0,\n",
              "  'pleasure': 1.0,\n",
              "  'tomorrow': 1.0,\n",
              "  'night': 1.0,\n",
              "  'on': 1.0,\n",
              "  'watch': 1.0,\n",
              "  'at': 1.0,\n",
              "  '7e/6c': 1.0,\n",
              "  'our': 1.0,\n",
              "  'official': 1.0,\n",
              "  'youtube': 1.0,\n",
              "  'channel': 1.0},\n",
              " {'pues': 1.0,\n",
              "  'sentiría': 1.0,\n",
              "  'confundido': 1.0,\n",
              "  ',': 0.02127659574468085,\n",
              "  'no': 0.03571428571428571,\n",
              "  'entendería': 1.0},\n",
              " {'si': 0.09090909090909091,\n",
              "  'quieres': 1.0,\n",
              "  'hacerme': 1.0,\n",
              "  'reclamo': 1.0,\n",
              "  'envia': 1.0,\n",
              "  'mensaje': 1.0,\n",
              "  'privado': 1.0,\n",
              "  ',': 0.02127659574468085,\n",
              "  'no': 0.07142857142857142,\n",
              "  'quiero': 0.5,\n",
              "  'llenar': 1.0,\n",
              "  'notificaciones': 1.0,\n",
              "  'personas': 0.3333333333333333,\n",
              "  'ver': 0.25,\n",
              "  '.': 0.037037037037037035},\n",
              " {'yoo': 1.0, 'bubu': 1.0, 'quiero': 0.5, 'grupo': 1.0},\n",
              " {'hermosas': 1.0},\n",
              " {},\n",
              " {'sueños': 1.0},\n",
              " {'jaja': 1.0},\n",
              " {'uy': 1.0,\n",
              "  ',': 0.02127659574468085,\n",
              "  'si': 0.09090909090909091,\n",
              "  'cosas': 0.3333333333333333,\n",
              "  'pasaran': 1.0,\n",
              "  'jajajaja': 0.3333333333333333},\n",
              " {'jajajajajajaja': 1.0},\n",
              " {'jajajajajajajaja': 1.0},\n",
              " {'jajajajajaj': 1.0},\n",
              " {'jajajajajajaaj': 1.0},\n",
              " {'kk': 1.0, 'nao': 1.0, 'mesmo': 1.0},\n",
              " {'jajajajaja': 1.0,\n",
              "  '?': 0.08333333333333333,\n",
              "  'army': 0.3333333333333333,\n",
              "  'no': 0.03571428571428571,\n",
              "  'duerme': 1.0,\n",
              "  'si': 0.09090909090909091,\n",
              "  'necesario': 1.0},\n",
              " {'ahora': 0.3333333333333333,\n",
              "  'gente': 1.0,\n",
              "  'llegué': 1.0,\n",
              "  'bien': 0.4,\n",
              "  'desayunada': 1.0,\n",
              "  'dormida': 1.0,\n",
              "  ',': 0.02127659574468085,\n",
              "  'lista': 0.5,\n",
              "  'votar': 0.3333333333333333,\n",
              "  '..': 0.25,\n",
              "  '(': 1.0,\n",
              "  ')': 0.5},\n",
              " {'good': 1.0,\n",
              "  'morning': 1.0,\n",
              "  'to': 0.5,\n",
              "  'armys': 1.0,\n",
              "  'and': 1.0,\n",
              "  'bts': 0.16666666666666666,\n",
              "  'onli': 1.0,\n",
              "  '!': 0.14285714285714285,\n",
              "  'let': 1.0,\n",
              "  '’': 1.0,\n",
              "  's': 1.0,\n",
              "  'vote': 0.5,\n",
              "  'harder': 1.0,\n",
              "  ',': 0.0425531914893617,\n",
              "  'i': 1.0,\n",
              "  'know': 1.0,\n",
              "  'we': 1.0,\n",
              "  'can': 1.0,\n",
              "  'all': 1.0,\n",
              "  'do': 1.0,\n",
              "  'this': 1.0,\n",
              "  ':': 0.16666666666666666,\n",
              "  ')': 0.5,\n",
              "  '&': 1.0,\n",
              "  'lt': 1.0,\n",
              "  ';': 1.0,\n",
              "  '3': 1.0},\n",
              " {'keep': 1.0, 'voting': 1.0},\n",
              " {},\n",
              " {'miedo': 1.0,\n",
              "  'jode': 1.0,\n",
              "  ',': 0.02127659574468085,\n",
              "  'no': 0.03571428571428571,\n",
              "  'aire': 1.0,\n",
              "  '!': 0.14285714285714285},\n",
              " {'si': 0.18181818181818182,\n",
              "  'estrategia': 1.0,\n",
              "  'murieran': 1.0,\n",
              "  'miles': 1.0,\n",
              "  'mexicanos': 0.5,\n",
              "  ',': 0.06382978723404255,\n",
              "  'funcionado': 1.0,\n",
              "  'maravilla': 1.0,\n",
              "  'falta': 1.0,\n",
              "  'doble': 1.0,\n",
              "  'cifra': 1.0,\n",
              "  'actual': 1.0,\n",
              "  '.': 0.07407407407407407,\n",
              "  'culpar': 1.0,\n",
              "  'deficiente': 1.0,\n",
              "  'gestión': 1.0,\n",
              "  'entonces': 0.3333333333333333,\n",
              "  'cayó': 1.0,\n",
              "  'anillo': 1.0,\n",
              "  'dedo': 1.0},\n",
              " {'tener': 0.2,\n",
              "  'poder': 1.0,\n",
              "  'asesinar': 1.0,\n",
              "  'mexicanos': 0.5,\n",
              "  '.': 0.037037037037037035},\n",
              " {'pasó': 1.0, '?': 0.08333333333333333},\n",
              " {'sólo': 0.5,\n",
              "  'extrañes': 1.0,\n",
              "  'alguien': 0.5,\n",
              "  ',': 0.0425531914893617,\n",
              "  'no': 0.07142857142857142,\n",
              "  'significa': 0.5,\n",
              "  'debas': 1.0,\n",
              "  'regresar': 1.0,\n",
              "  'persona': 1.0,\n",
              "  '.': 0.07407407407407407,\n",
              "  'veces': 0.3333333333333333,\n",
              "  'seguir': 1.0,\n",
              "  'echándola': 1.0,\n",
              "  'menos': 0.3333333333333333,\n",
              "  'despiertes': 1.0,\n",
              "  'día': 0.3333333333333333,\n",
              "  'des': 1.0,\n",
              "  'cuenta': 0.25,\n",
              "  'extrañas': 1.0},\n",
              " {'quieroo': 0.5},\n",
              " {'hueva': 1.0, ',': 0.02127659574468085, 'mayor': 0.5, 'inmadura': 1.0},\n",
              " {'triste': 1.0,\n",
              "  'darte': 1.0,\n",
              "  'cuenta': 0.25,\n",
              "  'duermes': 1.0,\n",
              "  'menos': 0.3333333333333333,\n",
              "  'horas': 1.0,\n",
              "  'escuela': 1.0,\n",
              "  '.': 0.037037037037037035},\n",
              " {'pedo': 1.0, 'gusta': 0.25, 'crush': 1.0},\n",
              " {'único': 0.5,\n",
              "  'queda': 1.0,\n",
              "  'claro': 1.0,\n",
              "  'desconocimiento': 1.0,\n",
              "  'impuestos': 1.0,\n",
              "  'sistema': 1.0,\n",
              "  'salud': 1.0,\n",
              "  ',': 0.02127659574468085,\n",
              "  'harvard': 1.0,\n",
              "  'sólo': 0.25,\n",
              "  'limpiar': 1.0,\n",
              "  'baños': 1.0,\n",
              "  '.': 0.037037037037037035},\n",
              " {},\n",
              " {'no': 0.03571428571428571, 'mames': 1.0},\n",
              " {'afeito': 1.0},\n",
              " {'``': 0.3333333333333333,\n",
              "  'disfruta': 1.0,\n",
              "  'soledad': 1.0,\n",
              "  'escoge': 1.0,\n",
              "  'mejor': 0.5,\n",
              "  'compañías': 1.0,\n",
              "  ',': 0.02127659574468085,\n",
              "  'no': 0.03571428571428571,\n",
              "  'puede': 1.0,\n",
              "  'sólo': 0.25,\n",
              "  'cualquier': 1.0,\n",
              "  'cosa': 0.5,\n",
              "  'desesperación': 1.0,\n",
              "  \"''\": 0.3333333333333333},\n",
              " {'no': 0.03571428571428571,\n",
              "  'logré': 0.5,\n",
              "  ',': 0.02127659574468085,\n",
              "  'siento': 1.0,\n",
              "  'verga': 0.5},\n",
              " {'total': 0.5},\n",
              " {'hablan': 1.0, 'extrañan': 1.0, 'thea': 1.0, '..': 0.25},\n",
              " {'jajajaja': 0.3333333333333333},\n",
              " {},\n",
              " {'d': 1.0},\n",
              " {'después': 0.5,\n",
              "  'cuántos': 1.0,\n",
              "  'plones': 1.0,\n",
              "  'profesa': 1.0,\n",
              "  'buena': 1.0,\n",
              "  'energía': 0.5,\n",
              "  '?': 0.08333333333333333},\n",
              " {'muero': 1.0, 'amor': 0.5},\n",
              " {'ahora': 0.3333333333333333, 'rompecorazones': 1.0},\n",
              " {'noches': 1.0, 'no': 0.03571428571428571, 'mismo': 1.0, 'vaper': 1.0},\n",
              " {'jajaja': 0.5, 'total': 0.5},\n",
              " {'no': 0.03571428571428571,\n",
              "  'nací': 1.0,\n",
              "  'amar': 1.0,\n",
              "  ',': 0.02127659574468085,\n",
              "  'nadie': 0.2,\n",
              "  'nació': 1.0},\n",
              " {'adiós': 1.0, 'amor': 0.5, ',': 0.02127659574468085, 'again': 1.0},\n",
              " {'arte': 1.0, '.': 0.037037037037037035},\n",
              " {'clave': 1.0,\n",
              "  'no': 0.07142857142857142,\n",
              "  'desesperarse': 1.0,\n",
              "  ',': 0.02127659574468085,\n",
              "  'parecer': 0.5,\n",
              "  'si': 0.09090909090909091,\n",
              "  'menos': 0.3333333333333333,\n",
              "  '.': 0.037037037037037035},\n",
              " {'máximo': 1.0,\n",
              "  'bloqueo': 1.0,\n",
              "  'navegador': 1.0,\n",
              "  'user': 1.0,\n",
              "  'va': 0.5,\n",
              "  'impedir': 1.0,\n",
              "  'veas': 1.0,\n",
              "  'si': 0.09090909090909091,\n",
              "  'propósito': 1.0,\n",
              "  '.': 0.037037037037037035},\n",
              " {'actitud': 1.0,\n",
              "  'no': 0.03571428571428571,\n",
              "  'rencor': 1.0,\n",
              "  'disfrazado': 1.0,\n",
              "  'madurez': 1.0,\n",
              "  '.': 0.037037037037037035},\n",
              " {'quedas': 1.0,\n",
              "  'ridícula': 1.0,\n",
              "  ',': 0.02127659574468085,\n",
              "  'personas': 0.3333333333333333,\n",
              "  'vs': 1.0,\n",
              "  'no': 0.03571428571428571,\n",
              "  'gasto': 1.0,\n",
              "  'hablar': 0.5,\n",
              "  '.': 0.037037037037037035},\n",
              " {'2mvs': 1.0,\n",
              "  ',': 0.10638297872340426,\n",
              "  'concept': 1.0,\n",
              "  'photos': 1.0,\n",
              "  'presentación': 1.0,\n",
              "  'mtv': 1.0,\n",
              "  'vivo': 1.0,\n",
              "  'entrevistas': 1.0,\n",
              "  'sale': 1.0,\n",
              "  'joda': 1.0,\n",
              "  'casa': 0.2,\n",
              "  'bangtan': 1.0,\n",
              "  'vuelve': 1.0,\n",
              "  'toda': 1.0},\n",
              " {'aaw': 1.0, 'sexy': 1.0, 'fancam': 1.0, 'go': 1.0, '1m': 1.0},\n",
              " {'pido': 1.0,\n",
              "  'disculpa': 1.0,\n",
              "  'agosto': 1.0,\n",
              "  'mes': 1.0,\n",
              "  'bts': 0.16666666666666666,\n",
              "  'así': 0.5,\n",
              "  'quieran': 0.5,\n",
              "  'vez': 0.5,\n",
              "  'mas': 0.5,\n",
              "  'intentar': 1.0,\n",
              "  'sabotearlos': 1.0,\n",
              "  ',': 0.02127659574468085,\n",
              "  'army': 0.3333333333333333,\n",
              "  'siempre': 1.0,\n",
              "  'lista': 0.5,\n",
              "  'romper': 1.0,\n",
              "  '.': 0.037037037037037035},\n",
              " {'jikook': 0.6666666666666666,\n",
              "  'novios': 0.6666666666666666,\n",
              "  ',': 0.10638297872340426,\n",
              "  'esposos': 1.0,\n",
              "  'soulmates': 1.0,\n",
              "  'maridos': 1.0,\n",
              "  'patrones': 1.0,\n",
              "  'amantes': 1.0,\n",
              "  'vuelta': 1.0},\n",
              " {'fandom': 1.0,\n",
              "  'ahora': 0.3333333333333333,\n",
              "  'viene': 1.0,\n",
              "  'cb': 1.0,\n",
              "  'año': 1.0},\n",
              " {},\n",
              " {'hoy': 0.5,\n",
              "  'confirmaron': 1.0,\n",
              "  'dos': 0.5,\n",
              "  'cosas': 0.3333333333333333,\n",
              "  ',': 0.02127659574468085,\n",
              "  'jungkook': 0.5,\n",
              "  'sabe': 1.0,\n",
              "  'hace': 0.3333333333333333,\n",
              "  'feliz': 1.0,\n",
              "  'jimin': 0.5,\n",
              "  'jikook': 0.3333333333333333,\n",
              "  'novios': 0.3333333333333333,\n",
              "  'chau': 1.0},\n",
              " {'semestre': 1.0,\n",
              "  'robado': 1.0,\n",
              "  'energía': 0.5,\n",
              "  'solo': 0.5,\n",
              "  'dos': 0.5,\n",
              "  'semanas': 1.0,\n",
              "  '.': 0.037037037037037035},\n",
              " {'primer': 1.0,\n",
              "  'día': 0.3333333333333333,\n",
              "  'fisioterapia': 1.0,\n",
              "  'intrahospitalaria': 1.0,\n",
              "  'enamoró': 1.0,\n",
              "  'totalmente': 1.0},\n",
              " {'hoy': 0.5, 'di': 1.0, 'cuenta': 0.25, 'encanta': 1.0, 'carrera': 0.5},\n",
              " {'wey': 1.0,\n",
              "  ',': 0.06382978723404255,\n",
              "  'sé': 1.0,\n",
              "  'real': 1.0,\n",
              "  'nadie': 0.6,\n",
              "  'posición': 1.0,\n",
              "  'criticar': 1.0,\n",
              "  'neta': 1.0,\n",
              "  'morra': 1.0,\n",
              "  'bien': 0.2,\n",
              "  'pinche': 0.5,\n",
              "  'enferma': 1.0,\n",
              "  '.': 0.07407407407407407,\n",
              "  'hace': 0.3333333333333333,\n",
              "  'vida': 1.0,\n",
              "  'no': 0.03571428571428571,\n",
              "  'andar': 1.0,\n",
              "  'chingando': 1.0},\n",
              " {'carrera': 0.5,\n",
              "  'llena': 1.0,\n",
              "  'taanto': 1.0,\n",
              "  'aunque': 1.0,\n",
              "  'hace': 0.3333333333333333,\n",
              "  'llorar': 0.5,\n",
              "  'demasiado': 1.0},\n",
              " {'confirmen': 1.0,\n",
              "  'si': 0.09090909090909091,\n",
              "  'amamos': 1.0,\n",
              "  'rap': 1.0,\n",
              "  'yoongi': 1.0,\n",
              "  'lights': 1.0,\n",
              "  '.': 0.037037037037037035,\n",
              "  '•': 1.0},\n",
              " {'rt': 0.5, 'to': 0.5, 'vote': 0.5},\n",
              " {'entonces': 0.3333333333333333, 'da': 1.0, 'rt': 0.5},\n",
              " {'logramos': 1.0,\n",
              "  '!': 0.2857142857142857,\n",
              "  'ojo': 0.5,\n",
              "  'no': 0.03571428571428571,\n",
              "  'significa': 0.5,\n",
              "  'dejemos': 1.0,\n",
              "  'votar': 0.6666666666666666,\n",
              "  ',': 0.0425531914893617,\n",
              "  'mayor': 0.5,\n",
              "  'razón': 1.0,\n",
              "  'debemos': 1.0,\n",
              "  'podamos': 1.0,\n",
              "  'aquí': 1.0,\n",
              "  'acaben': 1.0,\n",
              "  'votaciones': 1.0},\n",
              " {'ver': 0.25,\n",
              "  'directioners': 1.0,\n",
              "  'piden': 1.0,\n",
              "  'ayuda': 1.0,\n",
              "  'fandoms': 1.0,\n",
              "  'pagina': 1.0,\n",
              "  'no': 0.03571428571428571,\n",
              "  'cuenta': 0.25,\n",
              "  'llevamos': 1.0,\n",
              "  'creo': 0.5,\n",
              "  'arrevazamos': 1.0,\n",
              "  '1d': 1.0,\n",
              "  'verga': 0.5},\n",
              " {'púdrete': 1.0,\n",
              "  'maldita': 1.0,\n",
              "  'sensación': 1.0,\n",
              "  'angustia': 1.0,\n",
              "  'desespero': 1.0,\n",
              "  'no': 0.03571428571428571,\n",
              "  'tener': 0.2,\n",
              "  'estable': 1.0,\n",
              "  ',': 0.02127659574468085,\n",
              "  'déjame': 1.0,\n",
              "  'descansar': 0.3333333333333333,\n",
              "  'compañía': 1.0,\n",
              "  'pinche': 0.5,\n",
              "  'perra': 1.0,\n",
              "  '.': 0.037037037037037035},\n",
              " {},\n",
              " {'si': 0.09090909090909091,\n",
              "  'cosa': 0.5,\n",
              "  'sigue': 1.0,\n",
              "  'así': 0.5,\n",
              "  'va': 0.5,\n",
              "  'tocar': 1.0,\n",
              "  'incorporamos': 1.0,\n",
              "  'mundo': 1.0,\n",
              "  'pago': 1.0,\n",
              "  'sex': 1.0,\n",
              "  '.': 0.037037037037037035,\n",
              "  'jajaja': 0.5},\n",
              " {'tener': 0.2,\n",
              "  'ojos': 1.0,\n",
              "  'grandotes': 1.0,\n",
              "  'no': 0.03571428571428571,\n",
              "  'ver': 0.25,\n",
              "  'culo': 1.0,\n",
              "  '.': 0.07407407407407407,\n",
              "  'fin': 1.0,\n",
              "  ',': 0.02127659574468085,\n",
              "  'hipermetropía': 1.0},\n",
              " {'fan': 0.5,\n",
              "  'personas': 0.3333333333333333,\n",
              "  'saben': 1.0,\n",
              "  'asumir': 1.0,\n",
              "  'error': 1.0,\n",
              "  'pedir': 1.0,\n",
              "  'perdón': 1.0,\n",
              "  '.': 0.037037037037037035},\n",
              " {'¿algún': 1.0,\n",
              "  'tip': 1.0,\n",
              "  'ventas': 1.0,\n",
              "  'quieran': 0.5,\n",
              "  'compartir': 1.0,\n",
              "  'conmigo': 1.0,\n",
              "  '?': 0.08333333333333333},\n",
              " {'único': 0.5,\n",
              "  'emociona': 1.0,\n",
              "  'hacer': 0.5,\n",
              "  'vídeo': 1.0,\n",
              "  'llamada': 1.0,\n",
              "  'alguien': 0.5,\n",
              "  ',': 0.02127659574468085,\n",
              "  '?': 0.08333333333333333,\n",
              "  'ay': 1.0,\n",
              "  'no': 0.03571428571428571,\n",
              "  'gracias': 0.5,\n",
              "  '.': 0.037037037037037035},\n",
              " {'no': 0.03571428571428571,\n",
              "  'vayan': 1.0,\n",
              "  'ganas': 1.0,\n",
              "  'bonitas': 1.0,\n",
              "  'escribir': 1.0},\n",
              " {'sigues': 1.0, 'leyendo': 1.0, 'innecesariamente': 1.0},\n",
              " {'ojalá': 1.0,\n",
              "  'tan': 0.5,\n",
              "  'simple': 1.0,\n",
              "  'abrazo': 1.0,\n",
              "  'tener': 0.2,\n",
              "  'paz': 1.0,\n",
              "  '.': 0.037037037037037035},\n",
              " {'pasa': 1.0,\n",
              "  'cada': 1.0,\n",
              "  'día': 0.3333333333333333,\n",
              "  'desilucionan': 1.0,\n",
              "  'hombres': 1.0,\n",
              "  '?': 0.08333333333333333},\n",
              " {'manera': 1.0,\n",
              "  'ojitos': 1.0,\n",
              "  'brillan': 1.0,\n",
              "  'hablar': 0.5,\n",
              "  'demuestra': 1.0,\n",
              "  'belleza': 1.0,\n",
              "  'ser': 1.0,\n",
              "  'dentro': 1.0,\n",
              "  ',': 0.02127659574468085,\n",
              "  'jungkook': 0.5,\n",
              "  'tan': 0.5,\n",
              "  'increible': 1.0,\n",
              "  'encima': 1.0,\n",
              "  'miren': 1.0,\n",
              "  'manito': 1.0,\n",
              "  '``': 0.3333333333333333,\n",
              "  'army': 0.3333333333333333,\n",
              "  \"''\": 0.3333333333333333,\n",
              "  'dios': 0.5,\n",
              "  'voy': 1.0,\n",
              "  'llorar': 0.5},\n",
              " {'todas♡': 1.0},\n",
              " {'terminó': 1.0},\n",
              " {'pan': 1.0, 'sum': 1.0},\n",
              " {'p.': 1.0,\n",
              "  '¿si': 1.0,\n",
              "  'gusta': 0.5,\n",
              "  'quedarse': 1.0,\n",
              "  'casa': 0.4,\n",
              "  'no': 0.03571428571428571,\n",
              "  '?': 0.08333333333333333,\n",
              "  'jimin': 0.5,\n",
              "  ':': 0.16666666666666666,\n",
              "  'creo': 0.5,\n",
              "  'quedarnos': 1.0,\n",
              "  '!': 0.14285714285714285,\n",
              "  'bts': 0.16666666666666666},\n",
              " {'¿qué': 0.5,\n",
              "  'haces': 1.0,\n",
              "  'casa': 0.2,\n",
              "  '?': 0.08333333333333333,\n",
              "  'suga': 1.0,\n",
              "  ':': 0.16666666666666666,\n",
              "  'veces': 0.3333333333333333,\n",
              "  'veo': 1.0,\n",
              "  'películas': 1.0,\n",
              "  'escribo': 1.0,\n",
              "  'canciones': 0.5,\n",
              "  '.': 0.037037037037037035,\n",
              "  'punto': 1.0,\n",
              "  'principal': 1.0,\n",
              "  'descansar': 0.6666666666666666,\n",
              "  'no': 0.03571428571428571,\n",
              "  'trabajar': 1.0,\n",
              "  ',': 0.02127659574468085,\n",
              "  'ver': 0.25,\n",
              "  'televisión': 1.0,\n",
              "  'bts': 0.16666666666666666},\n",
              " {'¿qué': 0.5,\n",
              "  'haciendo': 1.0,\n",
              "  'días': 1.0,\n",
              "  '?': 0.08333333333333333,\n",
              "  ':': 0.5,\n",
              "  'trabajando': 1.0,\n",
              "  'realización': 1.0,\n",
              "  'canciones': 0.5,\n",
              "  'bts': 0.16666666666666666,\n",
              "  'ooh~': 1.0,\n",
              "  'ejercitándome': 1.0,\n",
              "  'fuertemente': 1.0},\n",
              " {'quieroo': 0.5, 'bu': 1.0},\n",
              " {'sera': 1.0,\n",
              "  'tomaron': 1.0,\n",
              "  'foto': 1.0,\n",
              "  'alli': 1.0,\n",
              "  'chicos': 1.0,\n",
              "  'grabando': 1.0,\n",
              "  'programa': 1.0,\n",
              "  '``': 0.3333333333333333,\n",
              "  'in': 1.0,\n",
              "  'the': 1.0,\n",
              "  'soop': 1.0,\n",
              "  \"''\": 0.3333333333333333,\n",
              "  'dios': 0.5,\n",
              "  'si': 0.09090909090909091,\n",
              "  'asi': 1.0,\n",
              "  'entonces': 0.3333333333333333,\n",
              "  'vmin': 1.0,\n",
              "  'compartio': 1.0,\n",
              "  'habitaciones': 1.0,\n",
              "  'bts': 0.16666666666666666},\n",
              " {'fluir': 1.0,\n",
              "  'bien': 0.2,\n",
              "  ',': 0.02127659574468085,\n",
              "  'hacer': 0.5,\n",
              "  'cosas': 0.3333333333333333,\n",
              "  'mejor': 0.5,\n",
              "  'pueda': 1.0,\n",
              "  'hacerle': 1.0,\n",
              "  'daño': 1.0,\n",
              "  'nadie': 0.2},\n",
              " {'no': 0.03571428571428571,\n",
              "  'enseñaron': 1.0,\n",
              "  'mínimo': 1.0,\n",
              "  'saludar': 1.0,\n",
              "  'dar': 1.0,\n",
              "  'gracias': 0.5,\n",
              "  '?': 0.08333333333333333,\n",
              "  'gas': 1.0,\n",
              "  '..': 0.25},\n",
              " {'dice': 1.0,\n",
              "  'superó': 1.0,\n",
              "  'crea': 1.0,\n",
              "  'perfiles': 1.0,\n",
              "  'falsos': 1.0,\n",
              "  'grindr': 1.0,\n",
              "  'escribirme': 1.0,\n",
              "  ',': 0.02127659574468085,\n",
              "  'tóxico': 1.0,\n",
              "  '.': 0.037037037037037035},\n",
              " {}]"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "## No modificar este código\n",
        "for i, doc_unicidad in enumerate(unicidad_simple):\n",
        "    print(f\"Tuit {i + 1}:\")\n",
        "    try:\n",
        "      #en caso de existir varias seleccionar la primera\n",
        "      max_word = max(doc_unicidad, key=doc_unicidad.get)  # Encuentra la palabra con la unicidad más alta\n",
        "      print(f\"  Palabra más representativa: {max_word} con unicidad de {doc_unicidad[max_word]:.2f}\")\n",
        "    except:\n",
        "      pass"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "t3D27HIElYIC",
        "outputId": "d4b88cd1-f17f-4d1f-8570-d0f78985699d"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Tuit 1:\n",
            "  Palabra más representativa: dices con unicidad de 1.00\n",
            "Tuit 2:\n",
            "  Palabra más representativa: deja con unicidad de 1.00\n",
            "Tuit 3:\n",
            "  Palabra más representativa: pulso con unicidad de 1.00\n",
            "Tuit 4:\n",
            "  Palabra más representativa: chino con unicidad de 1.00\n",
            "Tuit 5:\n",
            "  Palabra más representativa: extensiones con unicidad de 0.50\n",
            "Tuit 6:\n",
            "  Palabra más representativa: calidad con unicidad de 1.00\n",
            "Tuit 7:\n",
            "  Palabra más representativa: x2 con unicidad de 1.00\n",
            "Tuit 8:\n",
            "  Palabra más representativa: pou con unicidad de 1.00\n",
            "Tuit 9:\n",
            "  Palabra más representativa: eleven con unicidad de 1.00\n",
            "Tuit 10:\n",
            "  Palabra más representativa: pues con unicidad de 1.00\n",
            "Tuit 11:\n",
            "  Palabra más representativa: quieres con unicidad de 1.00\n",
            "Tuit 12:\n",
            "  Palabra más representativa: yoo con unicidad de 1.00\n",
            "Tuit 13:\n",
            "  Palabra más representativa: hermosas con unicidad de 1.00\n",
            "Tuit 14:\n",
            "Tuit 15:\n",
            "  Palabra más representativa: sueños con unicidad de 1.00\n",
            "Tuit 16:\n",
            "  Palabra más representativa: jaja con unicidad de 1.00\n",
            "Tuit 17:\n",
            "  Palabra más representativa: uy con unicidad de 1.00\n",
            "Tuit 18:\n",
            "  Palabra más representativa: jajajajajajaja con unicidad de 1.00\n",
            "Tuit 19:\n",
            "  Palabra más representativa: jajajajajajajaja con unicidad de 1.00\n",
            "Tuit 20:\n",
            "  Palabra más representativa: jajajajajaj con unicidad de 1.00\n",
            "Tuit 21:\n",
            "  Palabra más representativa: jajajajajajaaj con unicidad de 1.00\n",
            "Tuit 22:\n",
            "  Palabra más representativa: kk con unicidad de 1.00\n",
            "Tuit 23:\n",
            "  Palabra más representativa: jajajajaja con unicidad de 1.00\n",
            "Tuit 24:\n",
            "  Palabra más representativa: gente con unicidad de 1.00\n",
            "Tuit 25:\n",
            "  Palabra más representativa: good con unicidad de 1.00\n",
            "Tuit 26:\n",
            "  Palabra más representativa: keep con unicidad de 1.00\n",
            "Tuit 27:\n",
            "Tuit 28:\n",
            "  Palabra más representativa: miedo con unicidad de 1.00\n",
            "Tuit 29:\n",
            "  Palabra más representativa: estrategia con unicidad de 1.00\n",
            "Tuit 30:\n",
            "  Palabra más representativa: poder con unicidad de 1.00\n",
            "Tuit 31:\n",
            "  Palabra más representativa: pasó con unicidad de 1.00\n",
            "Tuit 32:\n",
            "  Palabra más representativa: extrañes con unicidad de 1.00\n",
            "Tuit 33:\n",
            "  Palabra más representativa: quieroo con unicidad de 0.50\n",
            "Tuit 34:\n",
            "  Palabra más representativa: hueva con unicidad de 1.00\n",
            "Tuit 35:\n",
            "  Palabra más representativa: triste con unicidad de 1.00\n",
            "Tuit 36:\n",
            "  Palabra más representativa: pedo con unicidad de 1.00\n",
            "Tuit 37:\n",
            "  Palabra más representativa: queda con unicidad de 1.00\n",
            "Tuit 38:\n",
            "Tuit 39:\n",
            "  Palabra más representativa: mames con unicidad de 1.00\n",
            "Tuit 40:\n",
            "  Palabra más representativa: afeito con unicidad de 1.00\n",
            "Tuit 41:\n",
            "  Palabra más representativa: disfruta con unicidad de 1.00\n",
            "Tuit 42:\n",
            "  Palabra más representativa: siento con unicidad de 1.00\n",
            "Tuit 43:\n",
            "  Palabra más representativa: total con unicidad de 0.50\n",
            "Tuit 44:\n",
            "  Palabra más representativa: hablan con unicidad de 1.00\n",
            "Tuit 45:\n",
            "  Palabra más representativa: jajajaja con unicidad de 0.33\n",
            "Tuit 46:\n",
            "Tuit 47:\n",
            "  Palabra más representativa: d con unicidad de 1.00\n",
            "Tuit 48:\n",
            "  Palabra más representativa: cuántos con unicidad de 1.00\n",
            "Tuit 49:\n",
            "  Palabra más representativa: muero con unicidad de 1.00\n",
            "Tuit 50:\n",
            "  Palabra más representativa: rompecorazones con unicidad de 1.00\n",
            "Tuit 51:\n",
            "  Palabra más representativa: noches con unicidad de 1.00\n",
            "Tuit 52:\n",
            "  Palabra más representativa: jajaja con unicidad de 0.50\n",
            "Tuit 53:\n",
            "  Palabra más representativa: nací con unicidad de 1.00\n",
            "Tuit 54:\n",
            "  Palabra más representativa: adiós con unicidad de 1.00\n",
            "Tuit 55:\n",
            "  Palabra más representativa: arte con unicidad de 1.00\n",
            "Tuit 56:\n",
            "  Palabra más representativa: clave con unicidad de 1.00\n",
            "Tuit 57:\n",
            "  Palabra más representativa: máximo con unicidad de 1.00\n",
            "Tuit 58:\n",
            "  Palabra más representativa: actitud con unicidad de 1.00\n",
            "Tuit 59:\n",
            "  Palabra más representativa: quedas con unicidad de 1.00\n",
            "Tuit 60:\n",
            "  Palabra más representativa: 2mvs con unicidad de 1.00\n",
            "Tuit 61:\n",
            "  Palabra más representativa: aaw con unicidad de 1.00\n",
            "Tuit 62:\n",
            "  Palabra más representativa: pido con unicidad de 1.00\n",
            "Tuit 63:\n",
            "  Palabra más representativa: esposos con unicidad de 1.00\n",
            "Tuit 64:\n",
            "  Palabra más representativa: fandom con unicidad de 1.00\n",
            "Tuit 65:\n",
            "Tuit 66:\n",
            "  Palabra más representativa: confirmaron con unicidad de 1.00\n",
            "Tuit 67:\n",
            "  Palabra más representativa: semestre con unicidad de 1.00\n",
            "Tuit 68:\n",
            "  Palabra más representativa: primer con unicidad de 1.00\n",
            "Tuit 69:\n",
            "  Palabra más representativa: di con unicidad de 1.00\n",
            "Tuit 70:\n",
            "  Palabra más representativa: wey con unicidad de 1.00\n",
            "Tuit 71:\n",
            "  Palabra más representativa: llena con unicidad de 1.00\n",
            "Tuit 72:\n",
            "  Palabra más representativa: confirmen con unicidad de 1.00\n",
            "Tuit 73:\n",
            "  Palabra más representativa: rt con unicidad de 0.50\n",
            "Tuit 74:\n",
            "  Palabra más representativa: da con unicidad de 1.00\n",
            "Tuit 75:\n",
            "  Palabra más representativa: logramos con unicidad de 1.00\n",
            "Tuit 76:\n",
            "  Palabra más representativa: directioners con unicidad de 1.00\n",
            "Tuit 77:\n",
            "  Palabra más representativa: púdrete con unicidad de 1.00\n",
            "Tuit 78:\n",
            "Tuit 79:\n",
            "  Palabra más representativa: sigue con unicidad de 1.00\n",
            "Tuit 80:\n",
            "  Palabra más representativa: ojos con unicidad de 1.00\n",
            "Tuit 81:\n",
            "  Palabra más representativa: saben con unicidad de 1.00\n",
            "Tuit 82:\n",
            "  Palabra más representativa: ¿algún con unicidad de 1.00\n",
            "Tuit 83:\n",
            "  Palabra más representativa: emociona con unicidad de 1.00\n",
            "Tuit 84:\n",
            "  Palabra más representativa: vayan con unicidad de 1.00\n",
            "Tuit 85:\n",
            "  Palabra más representativa: sigues con unicidad de 1.00\n",
            "Tuit 86:\n",
            "  Palabra más representativa: ojalá con unicidad de 1.00\n",
            "Tuit 87:\n",
            "  Palabra más representativa: pasa con unicidad de 1.00\n",
            "Tuit 88:\n",
            "  Palabra más representativa: manera con unicidad de 1.00\n",
            "Tuit 89:\n",
            "  Palabra más representativa: todas♡ con unicidad de 1.00\n",
            "Tuit 90:\n",
            "  Palabra más representativa: terminó con unicidad de 1.00\n",
            "Tuit 91:\n",
            "  Palabra más representativa: pan con unicidad de 1.00\n",
            "Tuit 92:\n",
            "  Palabra más representativa: p. con unicidad de 1.00\n",
            "Tuit 93:\n",
            "  Palabra más representativa: haces con unicidad de 1.00\n",
            "Tuit 94:\n",
            "  Palabra más representativa: haciendo con unicidad de 1.00\n",
            "Tuit 95:\n",
            "  Palabra más representativa: bu con unicidad de 1.00\n",
            "Tuit 96:\n",
            "  Palabra más representativa: sera con unicidad de 1.00\n",
            "Tuit 97:\n",
            "  Palabra más representativa: fluir con unicidad de 1.00\n",
            "Tuit 98:\n",
            "  Palabra más representativa: enseñaron con unicidad de 1.00\n",
            "Tuit 99:\n",
            "  Palabra más representativa: dice con unicidad de 1.00\n",
            "Tuit 100:\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 7. Encontrar Bigrams y Trigrams más comúnes.\n",
        "\n",
        "Usando `NLTK` calcula los bigrams y trigrams para cada lista de tokens limpios y guardalos en columnas nuevas.\n",
        "\n",
        "Después encuentra el brigram y trigram más común."
      ],
      "metadata": {
        "id": "7L75dXIekiqe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import nltk\n",
        "from nltk import bigrams, trigrams\n",
        "\n",
        "# Calcula bigrams y trigrams para cada lista de tokens limpios\n",
        "texts_df['bigrams'] = texts_df['cleaned_tokens'].apply(lambda x: list(bigrams(x)))\n",
        "texts_df['trigrams'] = texts_df['cleaned_tokens'].apply(lambda x: list(trigrams(x)))\n",
        "\n",
        "# Combina todos los bigrams y trigrams en una lista\n",
        "all_bigrams = [bigram for bigram_list in texts_df['bigrams'] for bigram in bigram_list]\n",
        "all_trigrams = [trigram for trigram_list in texts_df['trigrams'] for trigram in trigram_list]\n",
        "\n",
        "# Encuentra los bigrams y trigrams más comunes\n",
        "freq_dist_bigrams = nltk.FreqDist(all_bigrams)\n",
        "freq_dist_trigrams = nltk.FreqDist(all_trigrams)\n",
        "\n",
        "most_common_bigram = freq_dist_bigrams.most_common(1)[0]\n",
        "most_common_trigram = freq_dist_trigrams.most_common(1)[0]\n",
        "\n",
        "print(\"Bigram más común:\", most_common_bigram)\n",
        "print(\"Trigram más común:\", most_common_trigram)\n",
        "\n",
        "# Mostrar las primeras filas de la nueva columna\n",
        "texts_df[['tuits', 'cleaned_tuits','tokens', 'cleaned_tokens', 'lemmatize_tokens','bigrams','trigrams']].head(100)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 632
        },
        "id": "7aDvm6C6oySb",
        "outputId": "fb1a591c-0da9-4662-a3c1-309108fdf98e"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Bigram más común: (('keep', 'voting'), 7)\n",
            "Trigram más común: (('keep', 'voting', 'keep'), 6)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                tuits  \\\n",
              "0   @Liz_Mile Y después dices que no eres fan... h...   \n",
              "1   @Liz_Mile @Yaniserrano @ChasKapop Jajajaja si ...   \n",
              "2   Hay que tener pulso nivel 500 para darle con e...   \n",
              "3   @Liz_Mile Otro chino mas?!!!!! https://t.co/Ls...   \n",
              "4                      @Yaniserrano Más extensiones 🤣   \n",
              "..                                                ...   \n",
              "95  Sera que se tomaron la foto alli cuando los ch...   \n",
              "96  Fluir bien, hacer las cosas lo mejor que se pu...   \n",
              "97  No les enseñaron que lo mínimo es saludar y da...   \n",
              "98  Dice que me superó pero crea perfiles falsos e...   \n",
              "99                            https://t.co/NroMRMZeXb   \n",
              "\n",
              "                                        cleaned_tuits  \\\n",
              "0                   y después dices que no eres fan..   \n",
              "1   jajajaja si se deja crecer el cabello estaría ...   \n",
              "2   hay que tener pulso nivel 500 para darle con e...   \n",
              "3                                   otro chino mas?!!   \n",
              "4                                     más extensiones   \n",
              "..                                                ...   \n",
              "95  sera que se tomaron la foto alli cuando los ch...   \n",
              "96  fluir bien, hacer las cosas lo mejor que se pu...   \n",
              "97  no les enseñaron que lo mínimo es saludar y da...   \n",
              "98  dice que me superó pero crea perfiles falsos e...   \n",
              "99                                                      \n",
              "\n",
              "                                               tokens  \\\n",
              "0         [y, después, dices, que, no, eres, fan, ..]   \n",
              "1   [jajajaja, si, se, deja, crecer, el, cabello, ...   \n",
              "2   [hay, que, tener, pulso, nivel, 500, para, dar...   \n",
              "3                         [otro, chino, mas, ?, !, !]   \n",
              "4                                  [más, extensiones]   \n",
              "..                                                ...   \n",
              "95  [sera, que, se, tomaron, la, foto, alli, cuand...   \n",
              "96  [fluir, bien, ,, hacer, las, cosas, lo, mejor,...   \n",
              "97  [no, les, enseñaron, que, lo, mínimo, es, salu...   \n",
              "98  [dice, que, me, superó, pero, crea, perfiles, ...   \n",
              "99                                                 []   \n",
              "\n",
              "                                       cleaned_tokens  \\\n",
              "0                       [después, dices, no, fan, ..]   \n",
              "1   [jajajaja, si, deja, crecer, cabello, bien, gu...   \n",
              "2   [tener, pulso, nivel, 500, darle, exactitud, ,...   \n",
              "3                               [chino, mas, ?, !, !]   \n",
              "4                                       [extensiones]   \n",
              "..                                                ...   \n",
              "95  [sera, tomaron, foto, alli, chicos, grabando, ...   \n",
              "96  [fluir, bien, ,, hacer, cosas, mejor, pueda, h...   \n",
              "97  [no, enseñaron, mínimo, saludar, dar, gracias,...   \n",
              "98  [dice, superó, crea, perfiles, falsos, grindr,...   \n",
              "99                                                 []   \n",
              "\n",
              "                                     lemmatize_tokens  \\\n",
              "0                         [después, diz, no, fan, ..]   \n",
              "1   [jajajajar, si, dejar, crecer, cabello, bien, ...   \n",
              "2   [tener, pulso, nivel, 500, dar él, exactitud, ...   \n",
              "3                               [chino, mas, ?, !, !]   \n",
              "4                                         [extensión]   \n",
              "..                                                ...   \n",
              "95  [sero, tomar, foto, alli, chico, grabar, progr...   \n",
              "96  [fluir, bien, ,, hacer, cosa, mejor, poder, ha...   \n",
              "97  [no, enseñar, mínimo, saludar, dar, gracias, ?...   \n",
              "98  [decir, superar, creer, perfil, falso, grindr,...   \n",
              "99                                                 []   \n",
              "\n",
              "                                              bigrams  \\\n",
              "0   [(después, dices), (dices, no), (no, fan), (fa...   \n",
              "1   [(jajajaja, si), (si, deja), (deja, crecer), (...   \n",
              "2   [(tener, pulso), (pulso, nivel), (nivel, 500),...   \n",
              "3            [(chino, mas), (mas, ?), (?, !), (!, !)]   \n",
              "4                                                  []   \n",
              "..                                                ...   \n",
              "95  [(sera, tomaron), (tomaron, foto), (foto, alli...   \n",
              "96  [(fluir, bien), (bien, ,), (,, hacer), (hacer,...   \n",
              "97  [(no, enseñaron), (enseñaron, mínimo), (mínimo...   \n",
              "98  [(dice, superó), (superó, crea), (crea, perfil...   \n",
              "99                                                 []   \n",
              "\n",
              "                                             trigrams  \n",
              "0   [(después, dices, no), (dices, no, fan), (no, ...  \n",
              "1   [(jajajaja, si, deja), (si, deja, crecer), (de...  \n",
              "2   [(tener, pulso, nivel), (pulso, nivel, 500), (...  \n",
              "3           [(chino, mas, ?), (mas, ?, !), (?, !, !)]  \n",
              "4                                                  []  \n",
              "..                                                ...  \n",
              "95  [(sera, tomaron, foto), (tomaron, foto, alli),...  \n",
              "96  [(fluir, bien, ,), (bien, ,, hacer), (,, hacer...  \n",
              "97  [(no, enseñaron, mínimo), (enseñaron, mínimo, ...  \n",
              "98  [(dice, superó, crea), (superó, crea, perfiles...  \n",
              "99                                                 []  \n",
              "\n",
              "[100 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0a6926e6-8149-4dd0-a43f-28a66008ba62\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>tuits</th>\n",
              "      <th>cleaned_tuits</th>\n",
              "      <th>tokens</th>\n",
              "      <th>cleaned_tokens</th>\n",
              "      <th>lemmatize_tokens</th>\n",
              "      <th>bigrams</th>\n",
              "      <th>trigrams</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>@Liz_Mile Y después dices que no eres fan... h...</td>\n",
              "      <td>y después dices que no eres fan..</td>\n",
              "      <td>[y, después, dices, que, no, eres, fan, ..]</td>\n",
              "      <td>[después, dices, no, fan, ..]</td>\n",
              "      <td>[después, diz, no, fan, ..]</td>\n",
              "      <td>[(después, dices), (dices, no), (no, fan), (fa...</td>\n",
              "      <td>[(después, dices, no), (dices, no, fan), (no, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>@Liz_Mile @Yaniserrano @ChasKapop Jajajaja si ...</td>\n",
              "      <td>jajajaja si se deja crecer el cabello estaría ...</td>\n",
              "      <td>[jajajaja, si, se, deja, crecer, el, cabello, ...</td>\n",
              "      <td>[jajajaja, si, deja, crecer, cabello, bien, gu...</td>\n",
              "      <td>[jajajajar, si, dejar, crecer, cabello, bien, ...</td>\n",
              "      <td>[(jajajaja, si), (si, deja), (deja, crecer), (...</td>\n",
              "      <td>[(jajajaja, si, deja), (si, deja, crecer), (de...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Hay que tener pulso nivel 500 para darle con e...</td>\n",
              "      <td>hay que tener pulso nivel 500 para darle con e...</td>\n",
              "      <td>[hay, que, tener, pulso, nivel, 500, para, dar...</td>\n",
              "      <td>[tener, pulso, nivel, 500, darle, exactitud, ,...</td>\n",
              "      <td>[tener, pulso, nivel, 500, dar él, exactitud, ...</td>\n",
              "      <td>[(tener, pulso), (pulso, nivel), (nivel, 500),...</td>\n",
              "      <td>[(tener, pulso, nivel), (pulso, nivel, 500), (...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>@Liz_Mile Otro chino mas?!!!!! https://t.co/Ls...</td>\n",
              "      <td>otro chino mas?!!</td>\n",
              "      <td>[otro, chino, mas, ?, !, !]</td>\n",
              "      <td>[chino, mas, ?, !, !]</td>\n",
              "      <td>[chino, mas, ?, !, !]</td>\n",
              "      <td>[(chino, mas), (mas, ?), (?, !), (!, !)]</td>\n",
              "      <td>[(chino, mas, ?), (mas, ?, !), (?, !, !)]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>@Yaniserrano Más extensiones 🤣</td>\n",
              "      <td>más extensiones</td>\n",
              "      <td>[más, extensiones]</td>\n",
              "      <td>[extensiones]</td>\n",
              "      <td>[extensión]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>Sera que se tomaron la foto alli cuando los ch...</td>\n",
              "      <td>sera que se tomaron la foto alli cuando los ch...</td>\n",
              "      <td>[sera, que, se, tomaron, la, foto, alli, cuand...</td>\n",
              "      <td>[sera, tomaron, foto, alli, chicos, grabando, ...</td>\n",
              "      <td>[sero, tomar, foto, alli, chico, grabar, progr...</td>\n",
              "      <td>[(sera, tomaron), (tomaron, foto), (foto, alli...</td>\n",
              "      <td>[(sera, tomaron, foto), (tomaron, foto, alli),...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>Fluir bien, hacer las cosas lo mejor que se pu...</td>\n",
              "      <td>fluir bien, hacer las cosas lo mejor que se pu...</td>\n",
              "      <td>[fluir, bien, ,, hacer, las, cosas, lo, mejor,...</td>\n",
              "      <td>[fluir, bien, ,, hacer, cosas, mejor, pueda, h...</td>\n",
              "      <td>[fluir, bien, ,, hacer, cosa, mejor, poder, ha...</td>\n",
              "      <td>[(fluir, bien), (bien, ,), (,, hacer), (hacer,...</td>\n",
              "      <td>[(fluir, bien, ,), (bien, ,, hacer), (,, hacer...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>No les enseñaron que lo mínimo es saludar y da...</td>\n",
              "      <td>no les enseñaron que lo mínimo es saludar y da...</td>\n",
              "      <td>[no, les, enseñaron, que, lo, mínimo, es, salu...</td>\n",
              "      <td>[no, enseñaron, mínimo, saludar, dar, gracias,...</td>\n",
              "      <td>[no, enseñar, mínimo, saludar, dar, gracias, ?...</td>\n",
              "      <td>[(no, enseñaron), (enseñaron, mínimo), (mínimo...</td>\n",
              "      <td>[(no, enseñaron, mínimo), (enseñaron, mínimo, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>Dice que me superó pero crea perfiles falsos e...</td>\n",
              "      <td>dice que me superó pero crea perfiles falsos e...</td>\n",
              "      <td>[dice, que, me, superó, pero, crea, perfiles, ...</td>\n",
              "      <td>[dice, superó, crea, perfiles, falsos, grindr,...</td>\n",
              "      <td>[decir, superar, creer, perfil, falso, grindr,...</td>\n",
              "      <td>[(dice, superó), (superó, crea), (crea, perfil...</td>\n",
              "      <td>[(dice, superó, crea), (superó, crea, perfiles...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>https://t.co/NroMRMZeXb</td>\n",
              "      <td></td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "      <td>[]</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 7 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0a6926e6-8149-4dd0-a43f-28a66008ba62')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0a6926e6-8149-4dd0-a43f-28a66008ba62 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0a6926e6-8149-4dd0-a43f-28a66008ba62');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-47c832ea-676b-4c41-8884-99855edb373e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-47c832ea-676b-4c41-8884-99855edb373e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-47c832ea-676b-4c41-8884-99855edb373e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"texts_df[['tuits', 'cleaned_tuits','tokens', 'cleaned_tokens', 'lemmatize_tokens','bigrams','trigrams']]\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"tuits\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"Que no se vayan esas ganas bonitas de escribir\",\n          \"Adi\\u00f3s amor, again\",\n          \"Mi carrera me llena taaaaaanto \\u2764\\ufe0f\\ud83e\\udd70 aunque me hace llorar demasiado\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cleaned_tuits\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 94,\n        \"samples\": [\n          \"total\",\n          \"jajajajaja qu\\u00e9? army no duerme si es necesario\",\n          \"quedas como una rid\\u00edcula, con personas como vs no me gasto en hablar.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tokens\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cleaned_tokens\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lemmatize_tokens\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bigrams\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"trigrams\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Imprime los bigramas más comunes con su frecuencia\n",
        "for bigram, freq in freq_dist_bigrams.most_common():\n",
        "    print(f\"(\\\"{'-'.join(bigram)}\\\", {freq})\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "s2LNzM5PtdAd",
        "outputId": "e63e01df-0b94-425d-e158-ee8e517c2cbe"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(\"keep-voting\", 7)\n",
            "(\"voting-keep\", 6)\n",
            "(\",-no\", 5)\n",
            "(\"jikook-novios\", 3)\n",
            "(\"!-!\", 2)\n",
            "(\"tomorrow-night\", 2)\n",
            "(\"no-ver\", 2)\n",
            "(\"si-estrategia\", 2)\n",
            "(\"alguien-,\", 2)\n",
            "(\"no-significa\", 2)\n",
            "(\",-mayor\", 2)\n",
            "(\",-jungkook\", 2)\n",
            "(\"''-dios\", 2)\n",
            "(\"después-dices\", 1)\n",
            "(\"dices-no\", 1)\n",
            "(\"no-fan\", 1)\n",
            "(\"fan-..\", 1)\n",
            "(\"jajajaja-si\", 1)\n",
            "(\"si-deja\", 1)\n",
            "(\"deja-crecer\", 1)\n",
            "(\"crecer-cabello\", 1)\n",
            "(\"cabello-bien\", 1)\n",
            "(\"bien-gusta\", 1)\n",
            "(\"gusta-idea\", 1)\n",
            "(\"idea-cabello\", 1)\n",
            "(\"cabello-100\", 1)\n",
            "(\"100-%\", 1)\n",
            "(\"%-?\", 1)\n",
            "(\"?-veces\", 1)\n",
            "(\"veces-usaba\", 1)\n",
            "(\"usaba-extensiones\", 1)\n",
            "(\"tener-pulso\", 1)\n",
            "(\"pulso-nivel\", 1)\n",
            "(\"nivel-500\", 1)\n",
            "(\"500-darle\", 1)\n",
            "(\"darle-exactitud\", 1)\n",
            "(\"exactitud-,\", 1)\n",
            "(\",-parece\", 1)\n",
            "(\"parece-fácil\", 1)\n",
            "(\"fácil-no\", 1)\n",
            "(\"no-experimente\", 1)\n",
            "(\"experimente-engreído\", 1)\n",
            "(\"engreído-casa\", 1)\n",
            "(\"casa-hizo\", 1)\n",
            "(\"hizo-ulcera\", 1)\n",
            "(\"ulcera-parecer\", 1)\n",
            "(\"parecer-rama\", 1)\n",
            "(\"rama-,\", 1)\n",
            "(\",-solo\", 1)\n",
            "(\"solo-1\", 1)\n",
            "(\"1-vez\", 1)\n",
            "(\"vez-logré\", 1)\n",
            "(\"logré-aplicarle\", 1)\n",
            "(\"aplicarle-gota\", 1)\n",
            "(\"gota-despierto\", 1)\n",
            "(\"despierto-,\", 1)\n",
            "(\",-aprovechaba\", 1)\n",
            "(\"aprovechaba-dormido\", 1)\n",
            "(\"dormido-ojo\", 1)\n",
            "(\"ojo-entreabierto\", 1)\n",
            "(\"chino-mas\", 1)\n",
            "(\"mas-?\", 1)\n",
            "(\"?-!\", 1)\n",
            "(\"calidad-xd\", 1)\n",
            "(\"x2-khj\", 1)\n",
            "(\"khj-debe\", 1)\n",
            "(\"debe-papel\", 1)\n",
            "(\"papel-villano\", 1)\n",
            "(\"pou-loquillo\", 1)\n",
            "(\"loquillo-xd\", 1)\n",
            "(\"eleven-stacked\", 1)\n",
            "(\"stacked-matches\", 1)\n",
            "(\"matches-are\", 1)\n",
            "(\"are-ready\", 1)\n",
            "(\"ready-for\", 1)\n",
            "(\"for-your\", 1)\n",
            "(\"your-viewing\", 1)\n",
            "(\"viewing-pleasure\", 1)\n",
            "(\"pleasure-tomorrow\", 1)\n",
            "(\"night-on\", 1)\n",
            "(\"on-watch\", 1)\n",
            "(\"watch-tomorrow\", 1)\n",
            "(\"night-at\", 1)\n",
            "(\"at-7e/6c\", 1)\n",
            "(\"7e/6c-on\", 1)\n",
            "(\"on-our\", 1)\n",
            "(\"our-official\", 1)\n",
            "(\"official-youtube\", 1)\n",
            "(\"youtube-channel\", 1)\n",
            "(\"channel-at\", 1)\n",
            "(\"pues-sentiría\", 1)\n",
            "(\"sentiría-confundido\", 1)\n",
            "(\"confundido-,\", 1)\n",
            "(\"no-entendería\", 1)\n",
            "(\"si-quieres\", 1)\n",
            "(\"quieres-hacerme\", 1)\n",
            "(\"hacerme-reclamo\", 1)\n",
            "(\"reclamo-envia\", 1)\n",
            "(\"envia-mensaje\", 1)\n",
            "(\"mensaje-privado\", 1)\n",
            "(\"privado-,\", 1)\n",
            "(\"no-quiero\", 1)\n",
            "(\"quiero-llenar\", 1)\n",
            "(\"llenar-notificaciones\", 1)\n",
            "(\"notificaciones-personas\", 1)\n",
            "(\"personas-no\", 1)\n",
            "(\"ver-.\", 1)\n",
            "(\"yoo-bubu\", 1)\n",
            "(\"bubu-quiero\", 1)\n",
            "(\"quiero-grupo\", 1)\n",
            "(\"uy-,\", 1)\n",
            "(\",-si\", 1)\n",
            "(\"si-cosas\", 1)\n",
            "(\"cosas-pasaran\", 1)\n",
            "(\"pasaran-jajajaja\", 1)\n",
            "(\"kk-nao\", 1)\n",
            "(\"nao-mesmo\", 1)\n",
            "(\"jajajajaja-?\", 1)\n",
            "(\"?-army\", 1)\n",
            "(\"army-no\", 1)\n",
            "(\"no-duerme\", 1)\n",
            "(\"duerme-si\", 1)\n",
            "(\"si-necesario\", 1)\n",
            "(\"ahora-gente\", 1)\n",
            "(\"gente-llegué\", 1)\n",
            "(\"llegué-bien\", 1)\n",
            "(\"bien-desayunada\", 1)\n",
            "(\"desayunada-dormida\", 1)\n",
            "(\"dormida-,\", 1)\n",
            "(\",-bien\", 1)\n",
            "(\"bien-lista\", 1)\n",
            "(\"lista-votar\", 1)\n",
            "(\"votar-..\", 1)\n",
            "(\"..-(\", 1)\n",
            "(\"(-)\", 1)\n",
            "(\"good-morning\", 1)\n",
            "(\"morning-to\", 1)\n",
            "(\"to-armys\", 1)\n",
            "(\"armys-and\", 1)\n",
            "(\"and-bts\", 1)\n",
            "(\"bts-onli\", 1)\n",
            "(\"onli-!\", 1)\n",
            "(\"!-let\", 1)\n",
            "(\"let-’\", 1)\n",
            "(\"’-s\", 1)\n",
            "(\"s-vote\", 1)\n",
            "(\"vote-harder\", 1)\n",
            "(\"harder-,\", 1)\n",
            "(\",-,\", 1)\n",
            "(\",-i\", 1)\n",
            "(\"i-know\", 1)\n",
            "(\"know-we\", 1)\n",
            "(\"we-can\", 1)\n",
            "(\"can-all\", 1)\n",
            "(\"all-do\", 1)\n",
            "(\"do-this\", 1)\n",
            "(\"this-:\", 1)\n",
            "(\":-)\", 1)\n",
            "(\")-&\", 1)\n",
            "(\"&-lt\", 1)\n",
            "(\"lt-;\", 1)\n",
            "(\";-3\", 1)\n",
            "(\"miedo-jode\", 1)\n",
            "(\"jode-,\", 1)\n",
            "(\"no-aire\", 1)\n",
            "(\"aire-!\", 1)\n",
            "(\"estrategia-murieran\", 1)\n",
            "(\"murieran-miles\", 1)\n",
            "(\"miles-mexicanos\", 1)\n",
            "(\"mexicanos-,\", 1)\n",
            "(\",-funcionado\", 1)\n",
            "(\"funcionado-maravilla\", 1)\n",
            "(\"maravilla-,\", 1)\n",
            "(\",-falta\", 1)\n",
            "(\"falta-doble\", 1)\n",
            "(\"doble-cifra\", 1)\n",
            "(\"cifra-actual\", 1)\n",
            "(\"actual-.\", 1)\n",
            "(\".-si\", 1)\n",
            "(\"estrategia-culpar\", 1)\n",
            "(\"culpar-deficiente\", 1)\n",
            "(\"deficiente-gestión\", 1)\n",
            "(\"gestión-,\", 1)\n",
            "(\",-entonces\", 1)\n",
            "(\"entonces-cayó\", 1)\n",
            "(\"cayó-anillo\", 1)\n",
            "(\"anillo-dedo\", 1)\n",
            "(\"dedo-.\", 1)\n",
            "(\"tener-poder\", 1)\n",
            "(\"poder-asesinar\", 1)\n",
            "(\"asesinar-mexicanos\", 1)\n",
            "(\"mexicanos-.\", 1)\n",
            "(\"pasó-?\", 1)\n",
            "(\"sólo-extrañes\", 1)\n",
            "(\"extrañes-alguien\", 1)\n",
            "(\"significa-debas\", 1)\n",
            "(\"debas-regresar\", 1)\n",
            "(\"regresar-persona\", 1)\n",
            "(\"persona-.\", 1)\n",
            "(\".-veces\", 1)\n",
            "(\"veces-,\", 1)\n",
            "(\",-sólo\", 1)\n",
            "(\"sólo-seguir\", 1)\n",
            "(\"seguir-echándola\", 1)\n",
            "(\"echándola-menos\", 1)\n",
            "(\"menos-despiertes\", 1)\n",
            "(\"despiertes-día\", 1)\n",
            "(\"día-des\", 1)\n",
            "(\"des-cuenta\", 1)\n",
            "(\"cuenta-no\", 1)\n",
            "(\"no-extrañas\", 1)\n",
            "(\"extrañas-.\", 1)\n",
            "(\"hueva-,\", 1)\n",
            "(\"mayor-inmadura\", 1)\n",
            "(\"triste-darte\", 1)\n",
            "(\"darte-cuenta\", 1)\n",
            "(\"cuenta-duermes\", 1)\n",
            "(\"duermes-menos\", 1)\n",
            "(\"menos-horas\", 1)\n",
            "(\"horas-escuela\", 1)\n",
            "(\"escuela-.\", 1)\n",
            "(\"pedo-gusta\", 1)\n",
            "(\"gusta-crush\", 1)\n",
            "(\"único-queda\", 1)\n",
            "(\"queda-claro\", 1)\n",
            "(\"claro-desconocimiento\", 1)\n",
            "(\"desconocimiento-impuestos\", 1)\n",
            "(\"impuestos-sistema\", 1)\n",
            "(\"sistema-salud\", 1)\n",
            "(\"salud-,\", 1)\n",
            "(\",-harvard\", 1)\n",
            "(\"harvard-sólo\", 1)\n",
            "(\"sólo-limpiar\", 1)\n",
            "(\"limpiar-baños\", 1)\n",
            "(\"baños-.\", 1)\n",
            "(\"no-mames\", 1)\n",
            "(\"``-disfruta\", 1)\n",
            "(\"disfruta-soledad\", 1)\n",
            "(\"soledad-escoge\", 1)\n",
            "(\"escoge-mejor\", 1)\n",
            "(\"mejor-compañías\", 1)\n",
            "(\"compañías-,\", 1)\n",
            "(\"no-puede\", 1)\n",
            "(\"puede-sólo\", 1)\n",
            "(\"sólo-escoge\", 1)\n",
            "(\"escoge-cualquier\", 1)\n",
            "(\"cualquier-cosa\", 1)\n",
            "(\"cosa-desesperación\", 1)\n",
            "(\"desesperación-''\", 1)\n",
            "(\"no-logré\", 1)\n",
            "(\"logré-,\", 1)\n",
            "(\",-siento\", 1)\n",
            "(\"siento-verga\", 1)\n",
            "(\"hablan-extrañan\", 1)\n",
            "(\"extrañan-thea\", 1)\n",
            "(\"thea-..\", 1)\n",
            "(\"después-cuántos\", 1)\n",
            "(\"cuántos-plones\", 1)\n",
            "(\"plones-profesa\", 1)\n",
            "(\"profesa-buena\", 1)\n",
            "(\"buena-energía\", 1)\n",
            "(\"energía-?\", 1)\n",
            "(\"muero-amor\", 1)\n",
            "(\"ahora-rompecorazones\", 1)\n",
            "(\"noches-no\", 1)\n",
            "(\"no-mismo\", 1)\n",
            "(\"mismo-vaper\", 1)\n",
            "(\"jajaja-total\", 1)\n",
            "(\"no-nací\", 1)\n",
            "(\"nací-amar\", 1)\n",
            "(\"amar-,\", 1)\n",
            "(\",-nadie\", 1)\n",
            "(\"nadie-nació\", 1)\n",
            "(\"adiós-amor\", 1)\n",
            "(\"amor-,\", 1)\n",
            "(\",-again\", 1)\n",
            "(\"arte-.\", 1)\n",
            "(\"clave-no\", 1)\n",
            "(\"no-desesperarse\", 1)\n",
            "(\"desesperarse-,\", 1)\n",
            "(\",-parecer\", 1)\n",
            "(\"parecer-si\", 1)\n",
            "(\"si-no\", 1)\n",
            "(\"no-menos\", 1)\n",
            "(\"menos-.\", 1)\n",
            "(\"máximo-bloqueo\", 1)\n",
            "(\"bloqueo-navegador\", 1)\n",
            "(\"navegador-user\", 1)\n",
            "(\"user-va\", 1)\n",
            "(\"va-impedir\", 1)\n",
            "(\"impedir-veas\", 1)\n",
            "(\"veas-si\", 1)\n",
            "(\"si-propósito\", 1)\n",
            "(\"propósito-.\", 1)\n",
            "(\"actitud-no\", 1)\n",
            "(\"no-rencor\", 1)\n",
            "(\"rencor-disfrazado\", 1)\n",
            "(\"disfrazado-madurez\", 1)\n",
            "(\"madurez-.\", 1)\n",
            "(\"quedas-ridícula\", 1)\n",
            "(\"ridícula-,\", 1)\n",
            "(\",-personas\", 1)\n",
            "(\"personas-vs\", 1)\n",
            "(\"vs-no\", 1)\n",
            "(\"no-gasto\", 1)\n",
            "(\"gasto-hablar\", 1)\n",
            "(\"hablar-.\", 1)\n",
            "(\"2mvs-,\", 1)\n",
            "(\",-concept\", 1)\n",
            "(\"concept-photos\", 1)\n",
            "(\"photos-,\", 1)\n",
            "(\",-presentación\", 1)\n",
            "(\"presentación-mtv\", 1)\n",
            "(\"mtv-,\", 1)\n",
            "(\",-vivo\", 1)\n",
            "(\"vivo-,\", 1)\n",
            "(\",-entrevistas\", 1)\n",
            "(\"entrevistas-sale\", 1)\n",
            "(\"sale-joda\", 1)\n",
            "(\"joda-casa\", 1)\n",
            "(\"casa-,\", 1)\n",
            "(\",-bangtan\", 1)\n",
            "(\"bangtan-vuelve\", 1)\n",
            "(\"vuelve-toda\", 1)\n",
            "(\"aaw-sexy\", 1)\n",
            "(\"sexy-fancam\", 1)\n",
            "(\"fancam-go\", 1)\n",
            "(\"go-1m\", 1)\n",
            "(\"pido-disculpa\", 1)\n",
            "(\"disculpa-agosto\", 1)\n",
            "(\"agosto-mes\", 1)\n",
            "(\"mes-bts\", 1)\n",
            "(\"bts-así\", 1)\n",
            "(\"así-quieran\", 1)\n",
            "(\"quieran-vez\", 1)\n",
            "(\"vez-mas\", 1)\n",
            "(\"mas-intentar\", 1)\n",
            "(\"intentar-sabotearlos\", 1)\n",
            "(\"sabotearlos-,\", 1)\n",
            "(\",-army\", 1)\n",
            "(\"army-siempre\", 1)\n",
            "(\"siempre-lista\", 1)\n",
            "(\"lista-romper\", 1)\n",
            "(\"romper-.\", 1)\n",
            "(\"novios-,\", 1)\n",
            "(\",-esposos\", 1)\n",
            "(\"esposos-,\", 1)\n",
            "(\",-soulmates\", 1)\n",
            "(\"soulmates-,\", 1)\n",
            "(\",-maridos\", 1)\n",
            "(\"maridos-,\", 1)\n",
            "(\",-patrones\", 1)\n",
            "(\"patrones-,\", 1)\n",
            "(\",-amantes\", 1)\n",
            "(\"amantes-jikook\", 1)\n",
            "(\"novios-vuelta\", 1)\n",
            "(\"fandom-ahora\", 1)\n",
            "(\"ahora-viene\", 1)\n",
            "(\"viene-cb\", 1)\n",
            "(\"cb-año\", 1)\n",
            "(\"hoy-confirmaron\", 1)\n",
            "(\"confirmaron-dos\", 1)\n",
            "(\"dos-cosas\", 1)\n",
            "(\"cosas-,\", 1)\n",
            "(\"jungkook-sabe\", 1)\n",
            "(\"sabe-hace\", 1)\n",
            "(\"hace-feliz\", 1)\n",
            "(\"feliz-jimin\", 1)\n",
            "(\"jimin-jikook\", 1)\n",
            "(\"novios-chau\", 1)\n",
            "(\"semestre-robado\", 1)\n",
            "(\"robado-energía\", 1)\n",
            "(\"energía-solo\", 1)\n",
            "(\"solo-dos\", 1)\n",
            "(\"dos-semanas\", 1)\n",
            "(\"semanas-.\", 1)\n",
            "(\"primer-día\", 1)\n",
            "(\"día-fisioterapia\", 1)\n",
            "(\"fisioterapia-intrahospitalaria\", 1)\n",
            "(\"intrahospitalaria-enamoró\", 1)\n",
            "(\"enamoró-totalmente\", 1)\n",
            "(\"hoy-di\", 1)\n",
            "(\"di-cuenta\", 1)\n",
            "(\"cuenta-encanta\", 1)\n",
            "(\"encanta-carrera\", 1)\n",
            "(\"wey-,\", 1)\n",
            "(\",-sé\", 1)\n",
            "(\"sé-real\", 1)\n",
            "(\"real-nadie\", 1)\n",
            "(\"nadie-posición\", 1)\n",
            "(\"posición-criticar\", 1)\n",
            "(\"criticar-nadie\", 1)\n",
            "(\"nadie-,\", 1)\n",
            "(\",-neta\", 1)\n",
            "(\"neta-,\", 1)\n",
            "(\",-morra\", 1)\n",
            "(\"morra-bien\", 1)\n",
            "(\"bien-pinche\", 1)\n",
            "(\"pinche-enferma\", 1)\n",
            "(\"enferma-.\", 1)\n",
            "(\".-nadie\", 1)\n",
            "(\"nadie-hace\", 1)\n",
            "(\"hace-vida\", 1)\n",
            "(\"vida-no\", 1)\n",
            "(\"no-andar\", 1)\n",
            "(\"andar-chingando\", 1)\n",
            "(\"chingando-.\", 1)\n",
            "(\"carrera-llena\", 1)\n",
            "(\"llena-taanto\", 1)\n",
            "(\"taanto-aunque\", 1)\n",
            "(\"aunque-hace\", 1)\n",
            "(\"hace-llorar\", 1)\n",
            "(\"llorar-demasiado\", 1)\n",
            "(\"confirmen-si\", 1)\n",
            "(\"si-amamos\", 1)\n",
            "(\"amamos-rap\", 1)\n",
            "(\"rap-yoongi\", 1)\n",
            "(\"yoongi-lights\", 1)\n",
            "(\"lights-.\", 1)\n",
            "(\".-•\", 1)\n",
            "(\"rt-to\", 1)\n",
            "(\"to-vote\", 1)\n",
            "(\"entonces-da\", 1)\n",
            "(\"da-rt\", 1)\n",
            "(\"logramos-!\", 1)\n",
            "(\"!-ojo\", 1)\n",
            "(\"ojo-no\", 1)\n",
            "(\"significa-dejemos\", 1)\n",
            "(\"dejemos-votar\", 1)\n",
            "(\"votar-,\", 1)\n",
            "(\"mayor-razón\", 1)\n",
            "(\"razón-debemos\", 1)\n",
            "(\"debemos-votar\", 1)\n",
            "(\"votar-podamos\", 1)\n",
            "(\"podamos-aquí\", 1)\n",
            "(\"aquí-acaben\", 1)\n",
            "(\"acaben-votaciones\", 1)\n",
            "(\"votaciones-,\", 1)\n",
            "(\"ver-directioners\", 1)\n",
            "(\"directioners-piden\", 1)\n",
            "(\"piden-ayuda\", 1)\n",
            "(\"ayuda-fandoms\", 1)\n",
            "(\"fandoms-pagina\", 1)\n",
            "(\"pagina-no\", 1)\n",
            "(\"no-cuenta\", 1)\n",
            "(\"cuenta-llevamos\", 1)\n",
            "(\"llevamos-creo\", 1)\n",
            "(\"creo-arrevazamos\", 1)\n",
            "(\"arrevazamos-1d\", 1)\n",
            "(\"1d-pagina\", 1)\n",
            "(\"pagina-verga\", 1)\n",
            "(\"púdrete-maldita\", 1)\n",
            "(\"maldita-sensación\", 1)\n",
            "(\"sensación-angustia\", 1)\n",
            "(\"angustia-desespero\", 1)\n",
            "(\"desespero-no\", 1)\n",
            "(\"no-tener\", 1)\n",
            "(\"tener-estable\", 1)\n",
            "(\"estable-,\", 1)\n",
            "(\",-déjame\", 1)\n",
            "(\"déjame-descansar\", 1)\n",
            "(\"descansar-compañía\", 1)\n",
            "(\"compañía-pinche\", 1)\n",
            "(\"pinche-perra\", 1)\n",
            "(\"perra-.\", 1)\n",
            "(\"si-cosa\", 1)\n",
            "(\"cosa-sigue\", 1)\n",
            "(\"sigue-así\", 1)\n",
            "(\"así-va\", 1)\n",
            "(\"va-tocar\", 1)\n",
            "(\"tocar-incorporamos\", 1)\n",
            "(\"incorporamos-mundo\", 1)\n",
            "(\"mundo-pago\", 1)\n",
            "(\"pago-sex\", 1)\n",
            "(\"sex-.\", 1)\n",
            "(\".-jajaja\", 1)\n",
            "(\"tener-ojos\", 1)\n",
            "(\"ojos-grandotes\", 1)\n",
            "(\"grandotes-no\", 1)\n",
            "(\"ver-culo\", 1)\n",
            "(\"culo-.\", 1)\n",
            "(\".-fin\", 1)\n",
            "(\"fin-,\", 1)\n",
            "(\",-hipermetropía\", 1)\n",
            "(\"hipermetropía-.\", 1)\n",
            "(\"fan-personas\", 1)\n",
            "(\"personas-saben\", 1)\n",
            "(\"saben-asumir\", 1)\n",
            "(\"asumir-error\", 1)\n",
            "(\"error-pedir\", 1)\n",
            "(\"pedir-perdón\", 1)\n",
            "(\"perdón-.\", 1)\n",
            "(\"¿algún-tip\", 1)\n",
            "(\"tip-ventas\", 1)\n",
            "(\"ventas-quieran\", 1)\n",
            "(\"quieran-compartir\", 1)\n",
            "(\"compartir-conmigo\", 1)\n",
            "(\"conmigo-?\", 1)\n",
            "(\"único-emociona\", 1)\n",
            "(\"emociona-hacer\", 1)\n",
            "(\"hacer-vídeo\", 1)\n",
            "(\"vídeo-llamada\", 1)\n",
            "(\"llamada-alguien\", 1)\n",
            "(\",-?\", 1)\n",
            "(\"?-ay\", 1)\n",
            "(\"ay-no\", 1)\n",
            "(\"no-gracias\", 1)\n",
            "(\"gracias-.\", 1)\n",
            "(\"no-vayan\", 1)\n",
            "(\"vayan-ganas\", 1)\n",
            "(\"ganas-bonitas\", 1)\n",
            "(\"bonitas-escribir\", 1)\n",
            "(\"sigues-leyendo\", 1)\n",
            "(\"leyendo-innecesariamente\", 1)\n",
            "(\"ojalá-tan\", 1)\n",
            "(\"tan-simple\", 1)\n",
            "(\"simple-abrazo\", 1)\n",
            "(\"abrazo-tener\", 1)\n",
            "(\"tener-paz\", 1)\n",
            "(\"paz-.\", 1)\n",
            "(\"pasa-cada\", 1)\n",
            "(\"cada-día\", 1)\n",
            "(\"día-desilucionan\", 1)\n",
            "(\"desilucionan-hombres\", 1)\n",
            "(\"hombres-?\", 1)\n",
            "(\"manera-ojitos\", 1)\n",
            "(\"ojitos-brillan\", 1)\n",
            "(\"brillan-hablar\", 1)\n",
            "(\"hablar-demuestra\", 1)\n",
            "(\"demuestra-belleza\", 1)\n",
            "(\"belleza-ser\", 1)\n",
            "(\"ser-dentro\", 1)\n",
            "(\"dentro-,\", 1)\n",
            "(\"jungkook-tan\", 1)\n",
            "(\"tan-increible\", 1)\n",
            "(\"increible-encima\", 1)\n",
            "(\"encima-miren\", 1)\n",
            "(\"miren-manito\", 1)\n",
            "(\"manito-``\", 1)\n",
            "(\"``-army\", 1)\n",
            "(\"army-''\", 1)\n",
            "(\"dios-voy\", 1)\n",
            "(\"voy-llorar\", 1)\n",
            "(\"pan-sum\", 1)\n",
            "(\"p.-¿si\", 1)\n",
            "(\"¿si-gusta\", 1)\n",
            "(\"gusta-quedarse\", 1)\n",
            "(\"quedarse-casa\", 1)\n",
            "(\"casa-no\", 1)\n",
            "(\"no-?\", 1)\n",
            "(\"?-jimin\", 1)\n",
            "(\"jimin-:\", 1)\n",
            "(\":-creo\", 1)\n",
            "(\"creo-gusta\", 1)\n",
            "(\"gusta-quedarnos\", 1)\n",
            "(\"quedarnos-casa\", 1)\n",
            "(\"casa-!\", 1)\n",
            "(\"!-bts\", 1)\n",
            "(\"¿qué-haces\", 1)\n",
            "(\"haces-casa\", 1)\n",
            "(\"casa-?\", 1)\n",
            "(\"?-suga\", 1)\n",
            "(\"suga-:\", 1)\n",
            "(\":-veces\", 1)\n",
            "(\"veces-veo\", 1)\n",
            "(\"veo-películas\", 1)\n",
            "(\"películas-escribo\", 1)\n",
            "(\"escribo-canciones\", 1)\n",
            "(\"canciones-.\", 1)\n",
            "(\".-punto\", 1)\n",
            "(\"punto-principal\", 1)\n",
            "(\"principal-descansar\", 1)\n",
            "(\"descansar-no\", 1)\n",
            "(\"no-trabajar\", 1)\n",
            "(\"trabajar-,\", 1)\n",
            "(\",-descansar\", 1)\n",
            "(\"descansar-ver\", 1)\n",
            "(\"ver-televisión\", 1)\n",
            "(\"televisión-bts\", 1)\n",
            "(\"¿qué-haciendo\", 1)\n",
            "(\"haciendo-días\", 1)\n",
            "(\"días-?\", 1)\n",
            "(\"?-:\", 1)\n",
            "(\":-trabajando\", 1)\n",
            "(\"trabajando-realización\", 1)\n",
            "(\"realización-canciones\", 1)\n",
            "(\"canciones-bts\", 1)\n",
            "(\"bts-:\", 1)\n",
            "(\":-ooh~\", 1)\n",
            "(\"ooh~-:\", 1)\n",
            "(\":-ejercitándome\", 1)\n",
            "(\"ejercitándome-fuertemente\", 1)\n",
            "(\"quieroo-bu\", 1)\n",
            "(\"sera-tomaron\", 1)\n",
            "(\"tomaron-foto\", 1)\n",
            "(\"foto-alli\", 1)\n",
            "(\"alli-chicos\", 1)\n",
            "(\"chicos-grabando\", 1)\n",
            "(\"grabando-programa\", 1)\n",
            "(\"programa-``\", 1)\n",
            "(\"``-in\", 1)\n",
            "(\"in-the\", 1)\n",
            "(\"the-soop\", 1)\n",
            "(\"soop-''\", 1)\n",
            "(\"dios-si\", 1)\n",
            "(\"si-asi\", 1)\n",
            "(\"asi-entonces\", 1)\n",
            "(\"entonces-vmin\", 1)\n",
            "(\"vmin-compartio\", 1)\n",
            "(\"compartio-habitaciones\", 1)\n",
            "(\"habitaciones-bts\", 1)\n",
            "(\"fluir-bien\", 1)\n",
            "(\"bien-,\", 1)\n",
            "(\",-hacer\", 1)\n",
            "(\"hacer-cosas\", 1)\n",
            "(\"cosas-mejor\", 1)\n",
            "(\"mejor-pueda\", 1)\n",
            "(\"pueda-hacerle\", 1)\n",
            "(\"hacerle-daño\", 1)\n",
            "(\"daño-nadie\", 1)\n",
            "(\"no-enseñaron\", 1)\n",
            "(\"enseñaron-mínimo\", 1)\n",
            "(\"mínimo-saludar\", 1)\n",
            "(\"saludar-dar\", 1)\n",
            "(\"dar-gracias\", 1)\n",
            "(\"gracias-?\", 1)\n",
            "(\"?-gas\", 1)\n",
            "(\"gas-..\", 1)\n",
            "(\"dice-superó\", 1)\n",
            "(\"superó-crea\", 1)\n",
            "(\"crea-perfiles\", 1)\n",
            "(\"perfiles-falsos\", 1)\n",
            "(\"falsos-grindr\", 1)\n",
            "(\"grindr-escribirme\", 1)\n",
            "(\"escribirme-,\", 1)\n",
            "(\",-tóxico\", 1)\n",
            "(\"tóxico-tóxico\", 1)\n",
            "(\"tóxico-.\", 1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### Trigrams"
      ],
      "metadata": {
        "id": "IILKUcwlmldU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Imprime los trigramas más comunes con su frecuencia\n",
        "for trigram, freq in freq_dist_trigrams.most_common():\n",
        "    print(f\"(\\\"{'-'.join(trigram)}\\\", {freq})\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "z5VaDkX3trga",
        "outputId": "1ebc1650-dec6-40ce-d646-93bcc9cc166c"
      },
      "execution_count": 87,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(\"keep-voting-keep\", 6)\n",
            "(\"voting-keep-voting\", 6)\n",
            "(\"después-dices-no\", 1)\n",
            "(\"dices-no-fan\", 1)\n",
            "(\"no-fan-..\", 1)\n",
            "(\"jajajaja-si-deja\", 1)\n",
            "(\"si-deja-crecer\", 1)\n",
            "(\"deja-crecer-cabello\", 1)\n",
            "(\"crecer-cabello-bien\", 1)\n",
            "(\"cabello-bien-gusta\", 1)\n",
            "(\"bien-gusta-idea\", 1)\n",
            "(\"gusta-idea-cabello\", 1)\n",
            "(\"idea-cabello-100\", 1)\n",
            "(\"cabello-100-%\", 1)\n",
            "(\"100-%-?\", 1)\n",
            "(\"%-?-veces\", 1)\n",
            "(\"?-veces-usaba\", 1)\n",
            "(\"veces-usaba-extensiones\", 1)\n",
            "(\"tener-pulso-nivel\", 1)\n",
            "(\"pulso-nivel-500\", 1)\n",
            "(\"nivel-500-darle\", 1)\n",
            "(\"500-darle-exactitud\", 1)\n",
            "(\"darle-exactitud-,\", 1)\n",
            "(\"exactitud-,-parece\", 1)\n",
            "(\",-parece-fácil\", 1)\n",
            "(\"parece-fácil-no\", 1)\n",
            "(\"fácil-no-experimente\", 1)\n",
            "(\"no-experimente-engreído\", 1)\n",
            "(\"experimente-engreído-casa\", 1)\n",
            "(\"engreído-casa-hizo\", 1)\n",
            "(\"casa-hizo-ulcera\", 1)\n",
            "(\"hizo-ulcera-parecer\", 1)\n",
            "(\"ulcera-parecer-rama\", 1)\n",
            "(\"parecer-rama-,\", 1)\n",
            "(\"rama-,-solo\", 1)\n",
            "(\",-solo-1\", 1)\n",
            "(\"solo-1-vez\", 1)\n",
            "(\"1-vez-logré\", 1)\n",
            "(\"vez-logré-aplicarle\", 1)\n",
            "(\"logré-aplicarle-gota\", 1)\n",
            "(\"aplicarle-gota-despierto\", 1)\n",
            "(\"gota-despierto-,\", 1)\n",
            "(\"despierto-,-aprovechaba\", 1)\n",
            "(\",-aprovechaba-dormido\", 1)\n",
            "(\"aprovechaba-dormido-ojo\", 1)\n",
            "(\"dormido-ojo-entreabierto\", 1)\n",
            "(\"chino-mas-?\", 1)\n",
            "(\"mas-?-!\", 1)\n",
            "(\"?-!-!\", 1)\n",
            "(\"x2-khj-debe\", 1)\n",
            "(\"khj-debe-papel\", 1)\n",
            "(\"debe-papel-villano\", 1)\n",
            "(\"pou-loquillo-xd\", 1)\n",
            "(\"eleven-stacked-matches\", 1)\n",
            "(\"stacked-matches-are\", 1)\n",
            "(\"matches-are-ready\", 1)\n",
            "(\"are-ready-for\", 1)\n",
            "(\"ready-for-your\", 1)\n",
            "(\"for-your-viewing\", 1)\n",
            "(\"your-viewing-pleasure\", 1)\n",
            "(\"viewing-pleasure-tomorrow\", 1)\n",
            "(\"pleasure-tomorrow-night\", 1)\n",
            "(\"tomorrow-night-on\", 1)\n",
            "(\"night-on-watch\", 1)\n",
            "(\"on-watch-tomorrow\", 1)\n",
            "(\"watch-tomorrow-night\", 1)\n",
            "(\"tomorrow-night-at\", 1)\n",
            "(\"night-at-7e/6c\", 1)\n",
            "(\"at-7e/6c-on\", 1)\n",
            "(\"7e/6c-on-our\", 1)\n",
            "(\"on-our-official\", 1)\n",
            "(\"our-official-youtube\", 1)\n",
            "(\"official-youtube-channel\", 1)\n",
            "(\"youtube-channel-at\", 1)\n",
            "(\"pues-sentiría-confundido\", 1)\n",
            "(\"sentiría-confundido-,\", 1)\n",
            "(\"confundido-,-no\", 1)\n",
            "(\",-no-entendería\", 1)\n",
            "(\"si-quieres-hacerme\", 1)\n",
            "(\"quieres-hacerme-reclamo\", 1)\n",
            "(\"hacerme-reclamo-envia\", 1)\n",
            "(\"reclamo-envia-mensaje\", 1)\n",
            "(\"envia-mensaje-privado\", 1)\n",
            "(\"mensaje-privado-,\", 1)\n",
            "(\"privado-,-no\", 1)\n",
            "(\",-no-quiero\", 1)\n",
            "(\"no-quiero-llenar\", 1)\n",
            "(\"quiero-llenar-notificaciones\", 1)\n",
            "(\"llenar-notificaciones-personas\", 1)\n",
            "(\"notificaciones-personas-no\", 1)\n",
            "(\"personas-no-ver\", 1)\n",
            "(\"no-ver-.\", 1)\n",
            "(\"yoo-bubu-quiero\", 1)\n",
            "(\"bubu-quiero-grupo\", 1)\n",
            "(\"uy-,-si\", 1)\n",
            "(\",-si-cosas\", 1)\n",
            "(\"si-cosas-pasaran\", 1)\n",
            "(\"cosas-pasaran-jajajaja\", 1)\n",
            "(\"kk-nao-mesmo\", 1)\n",
            "(\"jajajajaja-?-army\", 1)\n",
            "(\"?-army-no\", 1)\n",
            "(\"army-no-duerme\", 1)\n",
            "(\"no-duerme-si\", 1)\n",
            "(\"duerme-si-necesario\", 1)\n",
            "(\"ahora-gente-llegué\", 1)\n",
            "(\"gente-llegué-bien\", 1)\n",
            "(\"llegué-bien-desayunada\", 1)\n",
            "(\"bien-desayunada-dormida\", 1)\n",
            "(\"desayunada-dormida-,\", 1)\n",
            "(\"dormida-,-bien\", 1)\n",
            "(\",-bien-lista\", 1)\n",
            "(\"bien-lista-votar\", 1)\n",
            "(\"lista-votar-..\", 1)\n",
            "(\"votar-..-(\", 1)\n",
            "(\"..-(-)\", 1)\n",
            "(\"good-morning-to\", 1)\n",
            "(\"morning-to-armys\", 1)\n",
            "(\"to-armys-and\", 1)\n",
            "(\"armys-and-bts\", 1)\n",
            "(\"and-bts-onli\", 1)\n",
            "(\"bts-onli-!\", 1)\n",
            "(\"onli-!-let\", 1)\n",
            "(\"!-let-’\", 1)\n",
            "(\"let-’-s\", 1)\n",
            "(\"’-s-vote\", 1)\n",
            "(\"s-vote-harder\", 1)\n",
            "(\"vote-harder-,\", 1)\n",
            "(\"harder-,-,\", 1)\n",
            "(\",-,-i\", 1)\n",
            "(\",-i-know\", 1)\n",
            "(\"i-know-we\", 1)\n",
            "(\"know-we-can\", 1)\n",
            "(\"we-can-all\", 1)\n",
            "(\"can-all-do\", 1)\n",
            "(\"all-do-this\", 1)\n",
            "(\"do-this-:\", 1)\n",
            "(\"this-:-)\", 1)\n",
            "(\":-)-&\", 1)\n",
            "(\")-&-lt\", 1)\n",
            "(\"&-lt-;\", 1)\n",
            "(\"lt-;-3\", 1)\n",
            "(\"miedo-jode-,\", 1)\n",
            "(\"jode-,-no\", 1)\n",
            "(\",-no-aire\", 1)\n",
            "(\"no-aire-!\", 1)\n",
            "(\"si-estrategia-murieran\", 1)\n",
            "(\"estrategia-murieran-miles\", 1)\n",
            "(\"murieran-miles-mexicanos\", 1)\n",
            "(\"miles-mexicanos-,\", 1)\n",
            "(\"mexicanos-,-funcionado\", 1)\n",
            "(\",-funcionado-maravilla\", 1)\n",
            "(\"funcionado-maravilla-,\", 1)\n",
            "(\"maravilla-,-falta\", 1)\n",
            "(\",-falta-doble\", 1)\n",
            "(\"falta-doble-cifra\", 1)\n",
            "(\"doble-cifra-actual\", 1)\n",
            "(\"cifra-actual-.\", 1)\n",
            "(\"actual-.-si\", 1)\n",
            "(\".-si-estrategia\", 1)\n",
            "(\"si-estrategia-culpar\", 1)\n",
            "(\"estrategia-culpar-deficiente\", 1)\n",
            "(\"culpar-deficiente-gestión\", 1)\n",
            "(\"deficiente-gestión-,\", 1)\n",
            "(\"gestión-,-entonces\", 1)\n",
            "(\",-entonces-cayó\", 1)\n",
            "(\"entonces-cayó-anillo\", 1)\n",
            "(\"cayó-anillo-dedo\", 1)\n",
            "(\"anillo-dedo-.\", 1)\n",
            "(\"tener-poder-asesinar\", 1)\n",
            "(\"poder-asesinar-mexicanos\", 1)\n",
            "(\"asesinar-mexicanos-.\", 1)\n",
            "(\"sólo-extrañes-alguien\", 1)\n",
            "(\"extrañes-alguien-,\", 1)\n",
            "(\"alguien-,-no\", 1)\n",
            "(\",-no-significa\", 1)\n",
            "(\"no-significa-debas\", 1)\n",
            "(\"significa-debas-regresar\", 1)\n",
            "(\"debas-regresar-persona\", 1)\n",
            "(\"regresar-persona-.\", 1)\n",
            "(\"persona-.-veces\", 1)\n",
            "(\".-veces-,\", 1)\n",
            "(\"veces-,-sólo\", 1)\n",
            "(\",-sólo-seguir\", 1)\n",
            "(\"sólo-seguir-echándola\", 1)\n",
            "(\"seguir-echándola-menos\", 1)\n",
            "(\"echándola-menos-despiertes\", 1)\n",
            "(\"menos-despiertes-día\", 1)\n",
            "(\"despiertes-día-des\", 1)\n",
            "(\"día-des-cuenta\", 1)\n",
            "(\"des-cuenta-no\", 1)\n",
            "(\"cuenta-no-extrañas\", 1)\n",
            "(\"no-extrañas-.\", 1)\n",
            "(\"hueva-,-mayor\", 1)\n",
            "(\",-mayor-inmadura\", 1)\n",
            "(\"triste-darte-cuenta\", 1)\n",
            "(\"darte-cuenta-duermes\", 1)\n",
            "(\"cuenta-duermes-menos\", 1)\n",
            "(\"duermes-menos-horas\", 1)\n",
            "(\"menos-horas-escuela\", 1)\n",
            "(\"horas-escuela-.\", 1)\n",
            "(\"pedo-gusta-crush\", 1)\n",
            "(\"único-queda-claro\", 1)\n",
            "(\"queda-claro-desconocimiento\", 1)\n",
            "(\"claro-desconocimiento-impuestos\", 1)\n",
            "(\"desconocimiento-impuestos-sistema\", 1)\n",
            "(\"impuestos-sistema-salud\", 1)\n",
            "(\"sistema-salud-,\", 1)\n",
            "(\"salud-,-harvard\", 1)\n",
            "(\",-harvard-sólo\", 1)\n",
            "(\"harvard-sólo-limpiar\", 1)\n",
            "(\"sólo-limpiar-baños\", 1)\n",
            "(\"limpiar-baños-.\", 1)\n",
            "(\"``-disfruta-soledad\", 1)\n",
            "(\"disfruta-soledad-escoge\", 1)\n",
            "(\"soledad-escoge-mejor\", 1)\n",
            "(\"escoge-mejor-compañías\", 1)\n",
            "(\"mejor-compañías-,\", 1)\n",
            "(\"compañías-,-no\", 1)\n",
            "(\",-no-puede\", 1)\n",
            "(\"no-puede-sólo\", 1)\n",
            "(\"puede-sólo-escoge\", 1)\n",
            "(\"sólo-escoge-cualquier\", 1)\n",
            "(\"escoge-cualquier-cosa\", 1)\n",
            "(\"cualquier-cosa-desesperación\", 1)\n",
            "(\"cosa-desesperación-''\", 1)\n",
            "(\"no-logré-,\", 1)\n",
            "(\"logré-,-siento\", 1)\n",
            "(\",-siento-verga\", 1)\n",
            "(\"hablan-extrañan-thea\", 1)\n",
            "(\"extrañan-thea-..\", 1)\n",
            "(\"después-cuántos-plones\", 1)\n",
            "(\"cuántos-plones-profesa\", 1)\n",
            "(\"plones-profesa-buena\", 1)\n",
            "(\"profesa-buena-energía\", 1)\n",
            "(\"buena-energía-?\", 1)\n",
            "(\"noches-no-mismo\", 1)\n",
            "(\"no-mismo-vaper\", 1)\n",
            "(\"no-nací-amar\", 1)\n",
            "(\"nací-amar-,\", 1)\n",
            "(\"amar-,-nadie\", 1)\n",
            "(\",-nadie-nació\", 1)\n",
            "(\"adiós-amor-,\", 1)\n",
            "(\"amor-,-again\", 1)\n",
            "(\"clave-no-desesperarse\", 1)\n",
            "(\"no-desesperarse-,\", 1)\n",
            "(\"desesperarse-,-parecer\", 1)\n",
            "(\",-parecer-si\", 1)\n",
            "(\"parecer-si-no\", 1)\n",
            "(\"si-no-menos\", 1)\n",
            "(\"no-menos-.\", 1)\n",
            "(\"máximo-bloqueo-navegador\", 1)\n",
            "(\"bloqueo-navegador-user\", 1)\n",
            "(\"navegador-user-va\", 1)\n",
            "(\"user-va-impedir\", 1)\n",
            "(\"va-impedir-veas\", 1)\n",
            "(\"impedir-veas-si\", 1)\n",
            "(\"veas-si-propósito\", 1)\n",
            "(\"si-propósito-.\", 1)\n",
            "(\"actitud-no-rencor\", 1)\n",
            "(\"no-rencor-disfrazado\", 1)\n",
            "(\"rencor-disfrazado-madurez\", 1)\n",
            "(\"disfrazado-madurez-.\", 1)\n",
            "(\"quedas-ridícula-,\", 1)\n",
            "(\"ridícula-,-personas\", 1)\n",
            "(\",-personas-vs\", 1)\n",
            "(\"personas-vs-no\", 1)\n",
            "(\"vs-no-gasto\", 1)\n",
            "(\"no-gasto-hablar\", 1)\n",
            "(\"gasto-hablar-.\", 1)\n",
            "(\"2mvs-,-concept\", 1)\n",
            "(\",-concept-photos\", 1)\n",
            "(\"concept-photos-,\", 1)\n",
            "(\"photos-,-presentación\", 1)\n",
            "(\",-presentación-mtv\", 1)\n",
            "(\"presentación-mtv-,\", 1)\n",
            "(\"mtv-,-vivo\", 1)\n",
            "(\",-vivo-,\", 1)\n",
            "(\"vivo-,-entrevistas\", 1)\n",
            "(\",-entrevistas-sale\", 1)\n",
            "(\"entrevistas-sale-joda\", 1)\n",
            "(\"sale-joda-casa\", 1)\n",
            "(\"joda-casa-,\", 1)\n",
            "(\"casa-,-bangtan\", 1)\n",
            "(\",-bangtan-vuelve\", 1)\n",
            "(\"bangtan-vuelve-toda\", 1)\n",
            "(\"aaw-sexy-fancam\", 1)\n",
            "(\"sexy-fancam-go\", 1)\n",
            "(\"fancam-go-1m\", 1)\n",
            "(\"pido-disculpa-agosto\", 1)\n",
            "(\"disculpa-agosto-mes\", 1)\n",
            "(\"agosto-mes-bts\", 1)\n",
            "(\"mes-bts-así\", 1)\n",
            "(\"bts-así-quieran\", 1)\n",
            "(\"así-quieran-vez\", 1)\n",
            "(\"quieran-vez-mas\", 1)\n",
            "(\"vez-mas-intentar\", 1)\n",
            "(\"mas-intentar-sabotearlos\", 1)\n",
            "(\"intentar-sabotearlos-,\", 1)\n",
            "(\"sabotearlos-,-army\", 1)\n",
            "(\",-army-siempre\", 1)\n",
            "(\"army-siempre-lista\", 1)\n",
            "(\"siempre-lista-romper\", 1)\n",
            "(\"lista-romper-.\", 1)\n",
            "(\"jikook-novios-,\", 1)\n",
            "(\"novios-,-esposos\", 1)\n",
            "(\",-esposos-,\", 1)\n",
            "(\"esposos-,-soulmates\", 1)\n",
            "(\",-soulmates-,\", 1)\n",
            "(\"soulmates-,-maridos\", 1)\n",
            "(\",-maridos-,\", 1)\n",
            "(\"maridos-,-patrones\", 1)\n",
            "(\",-patrones-,\", 1)\n",
            "(\"patrones-,-amantes\", 1)\n",
            "(\",-amantes-jikook\", 1)\n",
            "(\"amantes-jikook-novios\", 1)\n",
            "(\"jikook-novios-vuelta\", 1)\n",
            "(\"fandom-ahora-viene\", 1)\n",
            "(\"ahora-viene-cb\", 1)\n",
            "(\"viene-cb-año\", 1)\n",
            "(\"hoy-confirmaron-dos\", 1)\n",
            "(\"confirmaron-dos-cosas\", 1)\n",
            "(\"dos-cosas-,\", 1)\n",
            "(\"cosas-,-jungkook\", 1)\n",
            "(\",-jungkook-sabe\", 1)\n",
            "(\"jungkook-sabe-hace\", 1)\n",
            "(\"sabe-hace-feliz\", 1)\n",
            "(\"hace-feliz-jimin\", 1)\n",
            "(\"feliz-jimin-jikook\", 1)\n",
            "(\"jimin-jikook-novios\", 1)\n",
            "(\"jikook-novios-chau\", 1)\n",
            "(\"semestre-robado-energía\", 1)\n",
            "(\"robado-energía-solo\", 1)\n",
            "(\"energía-solo-dos\", 1)\n",
            "(\"solo-dos-semanas\", 1)\n",
            "(\"dos-semanas-.\", 1)\n",
            "(\"primer-día-fisioterapia\", 1)\n",
            "(\"día-fisioterapia-intrahospitalaria\", 1)\n",
            "(\"fisioterapia-intrahospitalaria-enamoró\", 1)\n",
            "(\"intrahospitalaria-enamoró-totalmente\", 1)\n",
            "(\"hoy-di-cuenta\", 1)\n",
            "(\"di-cuenta-encanta\", 1)\n",
            "(\"cuenta-encanta-carrera\", 1)\n",
            "(\"wey-,-sé\", 1)\n",
            "(\",-sé-real\", 1)\n",
            "(\"sé-real-nadie\", 1)\n",
            "(\"real-nadie-posición\", 1)\n",
            "(\"nadie-posición-criticar\", 1)\n",
            "(\"posición-criticar-nadie\", 1)\n",
            "(\"criticar-nadie-,\", 1)\n",
            "(\"nadie-,-neta\", 1)\n",
            "(\",-neta-,\", 1)\n",
            "(\"neta-,-morra\", 1)\n",
            "(\",-morra-bien\", 1)\n",
            "(\"morra-bien-pinche\", 1)\n",
            "(\"bien-pinche-enferma\", 1)\n",
            "(\"pinche-enferma-.\", 1)\n",
            "(\"enferma-.-nadie\", 1)\n",
            "(\".-nadie-hace\", 1)\n",
            "(\"nadie-hace-vida\", 1)\n",
            "(\"hace-vida-no\", 1)\n",
            "(\"vida-no-andar\", 1)\n",
            "(\"no-andar-chingando\", 1)\n",
            "(\"andar-chingando-.\", 1)\n",
            "(\"carrera-llena-taanto\", 1)\n",
            "(\"llena-taanto-aunque\", 1)\n",
            "(\"taanto-aunque-hace\", 1)\n",
            "(\"aunque-hace-llorar\", 1)\n",
            "(\"hace-llorar-demasiado\", 1)\n",
            "(\"confirmen-si-amamos\", 1)\n",
            "(\"si-amamos-rap\", 1)\n",
            "(\"amamos-rap-yoongi\", 1)\n",
            "(\"rap-yoongi-lights\", 1)\n",
            "(\"yoongi-lights-.\", 1)\n",
            "(\"lights-.-•\", 1)\n",
            "(\"rt-to-vote\", 1)\n",
            "(\"entonces-da-rt\", 1)\n",
            "(\"logramos-!-!\", 1)\n",
            "(\"!-!-ojo\", 1)\n",
            "(\"!-ojo-no\", 1)\n",
            "(\"ojo-no-significa\", 1)\n",
            "(\"no-significa-dejemos\", 1)\n",
            "(\"significa-dejemos-votar\", 1)\n",
            "(\"dejemos-votar-,\", 1)\n",
            "(\"votar-,-mayor\", 1)\n",
            "(\",-mayor-razón\", 1)\n",
            "(\"mayor-razón-debemos\", 1)\n",
            "(\"razón-debemos-votar\", 1)\n",
            "(\"debemos-votar-podamos\", 1)\n",
            "(\"votar-podamos-aquí\", 1)\n",
            "(\"podamos-aquí-acaben\", 1)\n",
            "(\"aquí-acaben-votaciones\", 1)\n",
            "(\"acaben-votaciones-,\", 1)\n",
            "(\"ver-directioners-piden\", 1)\n",
            "(\"directioners-piden-ayuda\", 1)\n",
            "(\"piden-ayuda-fandoms\", 1)\n",
            "(\"ayuda-fandoms-pagina\", 1)\n",
            "(\"fandoms-pagina-no\", 1)\n",
            "(\"pagina-no-cuenta\", 1)\n",
            "(\"no-cuenta-llevamos\", 1)\n",
            "(\"cuenta-llevamos-creo\", 1)\n",
            "(\"llevamos-creo-arrevazamos\", 1)\n",
            "(\"creo-arrevazamos-1d\", 1)\n",
            "(\"arrevazamos-1d-pagina\", 1)\n",
            "(\"1d-pagina-verga\", 1)\n",
            "(\"púdrete-maldita-sensación\", 1)\n",
            "(\"maldita-sensación-angustia\", 1)\n",
            "(\"sensación-angustia-desespero\", 1)\n",
            "(\"angustia-desespero-no\", 1)\n",
            "(\"desespero-no-tener\", 1)\n",
            "(\"no-tener-estable\", 1)\n",
            "(\"tener-estable-,\", 1)\n",
            "(\"estable-,-déjame\", 1)\n",
            "(\",-déjame-descansar\", 1)\n",
            "(\"déjame-descansar-compañía\", 1)\n",
            "(\"descansar-compañía-pinche\", 1)\n",
            "(\"compañía-pinche-perra\", 1)\n",
            "(\"pinche-perra-.\", 1)\n",
            "(\"si-cosa-sigue\", 1)\n",
            "(\"cosa-sigue-así\", 1)\n",
            "(\"sigue-así-va\", 1)\n",
            "(\"así-va-tocar\", 1)\n",
            "(\"va-tocar-incorporamos\", 1)\n",
            "(\"tocar-incorporamos-mundo\", 1)\n",
            "(\"incorporamos-mundo-pago\", 1)\n",
            "(\"mundo-pago-sex\", 1)\n",
            "(\"pago-sex-.\", 1)\n",
            "(\"sex-.-jajaja\", 1)\n",
            "(\"tener-ojos-grandotes\", 1)\n",
            "(\"ojos-grandotes-no\", 1)\n",
            "(\"grandotes-no-ver\", 1)\n",
            "(\"no-ver-culo\", 1)\n",
            "(\"ver-culo-.\", 1)\n",
            "(\"culo-.-fin\", 1)\n",
            "(\".-fin-,\", 1)\n",
            "(\"fin-,-hipermetropía\", 1)\n",
            "(\",-hipermetropía-.\", 1)\n",
            "(\"fan-personas-saben\", 1)\n",
            "(\"personas-saben-asumir\", 1)\n",
            "(\"saben-asumir-error\", 1)\n",
            "(\"asumir-error-pedir\", 1)\n",
            "(\"error-pedir-perdón\", 1)\n",
            "(\"pedir-perdón-.\", 1)\n",
            "(\"¿algún-tip-ventas\", 1)\n",
            "(\"tip-ventas-quieran\", 1)\n",
            "(\"ventas-quieran-compartir\", 1)\n",
            "(\"quieran-compartir-conmigo\", 1)\n",
            "(\"compartir-conmigo-?\", 1)\n",
            "(\"único-emociona-hacer\", 1)\n",
            "(\"emociona-hacer-vídeo\", 1)\n",
            "(\"hacer-vídeo-llamada\", 1)\n",
            "(\"vídeo-llamada-alguien\", 1)\n",
            "(\"llamada-alguien-,\", 1)\n",
            "(\"alguien-,-?\", 1)\n",
            "(\",-?-ay\", 1)\n",
            "(\"?-ay-no\", 1)\n",
            "(\"ay-no-gracias\", 1)\n",
            "(\"no-gracias-.\", 1)\n",
            "(\"no-vayan-ganas\", 1)\n",
            "(\"vayan-ganas-bonitas\", 1)\n",
            "(\"ganas-bonitas-escribir\", 1)\n",
            "(\"sigues-leyendo-innecesariamente\", 1)\n",
            "(\"ojalá-tan-simple\", 1)\n",
            "(\"tan-simple-abrazo\", 1)\n",
            "(\"simple-abrazo-tener\", 1)\n",
            "(\"abrazo-tener-paz\", 1)\n",
            "(\"tener-paz-.\", 1)\n",
            "(\"pasa-cada-día\", 1)\n",
            "(\"cada-día-desilucionan\", 1)\n",
            "(\"día-desilucionan-hombres\", 1)\n",
            "(\"desilucionan-hombres-?\", 1)\n",
            "(\"manera-ojitos-brillan\", 1)\n",
            "(\"ojitos-brillan-hablar\", 1)\n",
            "(\"brillan-hablar-demuestra\", 1)\n",
            "(\"hablar-demuestra-belleza\", 1)\n",
            "(\"demuestra-belleza-ser\", 1)\n",
            "(\"belleza-ser-dentro\", 1)\n",
            "(\"ser-dentro-,\", 1)\n",
            "(\"dentro-,-jungkook\", 1)\n",
            "(\",-jungkook-tan\", 1)\n",
            "(\"jungkook-tan-increible\", 1)\n",
            "(\"tan-increible-encima\", 1)\n",
            "(\"increible-encima-miren\", 1)\n",
            "(\"encima-miren-manito\", 1)\n",
            "(\"miren-manito-``\", 1)\n",
            "(\"manito-``-army\", 1)\n",
            "(\"``-army-''\", 1)\n",
            "(\"army-''-dios\", 1)\n",
            "(\"''-dios-voy\", 1)\n",
            "(\"dios-voy-llorar\", 1)\n",
            "(\"p.-¿si-gusta\", 1)\n",
            "(\"¿si-gusta-quedarse\", 1)\n",
            "(\"gusta-quedarse-casa\", 1)\n",
            "(\"quedarse-casa-no\", 1)\n",
            "(\"casa-no-?\", 1)\n",
            "(\"no-?-jimin\", 1)\n",
            "(\"?-jimin-:\", 1)\n",
            "(\"jimin-:-creo\", 1)\n",
            "(\":-creo-gusta\", 1)\n",
            "(\"creo-gusta-quedarnos\", 1)\n",
            "(\"gusta-quedarnos-casa\", 1)\n",
            "(\"quedarnos-casa-!\", 1)\n",
            "(\"casa-!-bts\", 1)\n",
            "(\"¿qué-haces-casa\", 1)\n",
            "(\"haces-casa-?\", 1)\n",
            "(\"casa-?-suga\", 1)\n",
            "(\"?-suga-:\", 1)\n",
            "(\"suga-:-veces\", 1)\n",
            "(\":-veces-veo\", 1)\n",
            "(\"veces-veo-películas\", 1)\n",
            "(\"veo-películas-escribo\", 1)\n",
            "(\"películas-escribo-canciones\", 1)\n",
            "(\"escribo-canciones-.\", 1)\n",
            "(\"canciones-.-punto\", 1)\n",
            "(\".-punto-principal\", 1)\n",
            "(\"punto-principal-descansar\", 1)\n",
            "(\"principal-descansar-no\", 1)\n",
            "(\"descansar-no-trabajar\", 1)\n",
            "(\"no-trabajar-,\", 1)\n",
            "(\"trabajar-,-descansar\", 1)\n",
            "(\",-descansar-ver\", 1)\n",
            "(\"descansar-ver-televisión\", 1)\n",
            "(\"ver-televisión-bts\", 1)\n",
            "(\"¿qué-haciendo-días\", 1)\n",
            "(\"haciendo-días-?\", 1)\n",
            "(\"días-?-:\", 1)\n",
            "(\"?-:-trabajando\", 1)\n",
            "(\":-trabajando-realización\", 1)\n",
            "(\"trabajando-realización-canciones\", 1)\n",
            "(\"realización-canciones-bts\", 1)\n",
            "(\"canciones-bts-:\", 1)\n",
            "(\"bts-:-ooh~\", 1)\n",
            "(\":-ooh~-:\", 1)\n",
            "(\"ooh~-:-ejercitándome\", 1)\n",
            "(\":-ejercitándome-fuertemente\", 1)\n",
            "(\"sera-tomaron-foto\", 1)\n",
            "(\"tomaron-foto-alli\", 1)\n",
            "(\"foto-alli-chicos\", 1)\n",
            "(\"alli-chicos-grabando\", 1)\n",
            "(\"chicos-grabando-programa\", 1)\n",
            "(\"grabando-programa-``\", 1)\n",
            "(\"programa-``-in\", 1)\n",
            "(\"``-in-the\", 1)\n",
            "(\"in-the-soop\", 1)\n",
            "(\"the-soop-''\", 1)\n",
            "(\"soop-''-dios\", 1)\n",
            "(\"''-dios-si\", 1)\n",
            "(\"dios-si-asi\", 1)\n",
            "(\"si-asi-entonces\", 1)\n",
            "(\"asi-entonces-vmin\", 1)\n",
            "(\"entonces-vmin-compartio\", 1)\n",
            "(\"vmin-compartio-habitaciones\", 1)\n",
            "(\"compartio-habitaciones-bts\", 1)\n",
            "(\"fluir-bien-,\", 1)\n",
            "(\"bien-,-hacer\", 1)\n",
            "(\",-hacer-cosas\", 1)\n",
            "(\"hacer-cosas-mejor\", 1)\n",
            "(\"cosas-mejor-pueda\", 1)\n",
            "(\"mejor-pueda-hacerle\", 1)\n",
            "(\"pueda-hacerle-daño\", 1)\n",
            "(\"hacerle-daño-nadie\", 1)\n",
            "(\"no-enseñaron-mínimo\", 1)\n",
            "(\"enseñaron-mínimo-saludar\", 1)\n",
            "(\"mínimo-saludar-dar\", 1)\n",
            "(\"saludar-dar-gracias\", 1)\n",
            "(\"dar-gracias-?\", 1)\n",
            "(\"gracias-?-gas\", 1)\n",
            "(\"?-gas-..\", 1)\n",
            "(\"dice-superó-crea\", 1)\n",
            "(\"superó-crea-perfiles\", 1)\n",
            "(\"crea-perfiles-falsos\", 1)\n",
            "(\"perfiles-falsos-grindr\", 1)\n",
            "(\"falsos-grindr-escribirme\", 1)\n",
            "(\"grindr-escribirme-,\", 1)\n",
            "(\"escribirme-,-tóxico\", 1)\n",
            "(\",-tóxico-tóxico\", 1)\n",
            "(\"tóxico-tóxico-.\", 1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "¿Qué otras funciones de limpieza o análisis aplicarías y porqué?"
      ],
      "metadata": {
        "id": "e2HDz4K8uM-y"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Normalización de palabras: Algunas palabras pueden aparecer en diferentes formas, como abreviaturas, acrónimos o variaciones de escritura. Normalizar estas palabras puede mejorar la consistencia de los datos."
      ],
      "metadata": {
        "id": "1pytbLjz15s_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import unicodedata\n",
        "\n",
        "def normalize_text(text):\n",
        "    normalized_text = unicodedata.normalize('NFKD', text).encode('ascii', 'ignore').decode('utf-8', 'ignore')\n",
        "    return normalized_text\n",
        "\n",
        "texts_df['cleaned_tuits'] = texts_df['cleaned_tuits'].apply(normalize_text)"
      ],
      "metadata": {
        "id": "N_QamLyE12rW"
      },
      "execution_count": 94,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Expansión de abreviaturas y acrónimos: Los tuits suelen contener abreviaturas y acrónimos, lo que puede dificultar su comprensión. Expandir estas formas abreviadas puede mejorar la legibilidad y el análisis posterior."
      ],
      "metadata": {
        "id": "F0iqTa6x2AU4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import nltk\n",
        "from nltk.corpus import stopwords\n",
        "\n",
        "abbreviations = {\n",
        "    'rt': 'retweet',\n",
        "    'fav': 'favorito',\n",
        "    'lol': 'laughing out loud',\n",
        "    # Agrega más abreviaturas según sea necesario\n",
        "}\n",
        "\n",
        "def expand_abbreviations(text):\n",
        "    words = text.split()\n",
        "    expanded_words = []\n",
        "    for word in words:\n",
        "        if word.lower() in abbreviations:\n",
        "            expanded_words.append(abbreviations[word.lower()])\n",
        "        else:\n",
        "            expanded_words.append(word)\n",
        "    return ' '.join(expanded_words)\n",
        "\n",
        "texts_df['cleaned_tuits'] = texts_df['cleaned_tuits'].apply(expand_abbreviations)"
      ],
      "metadata": {
        "id": "-cNPxALX2Bsa"
      },
      "execution_count": 95,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Remover puntuación: Eliminar signos de puntuación como comas, puntos, signos de interrogación, etc. Esto puede ser útil para tareas como el análisis de sentimientos o la generación de nubes de palabras, donde los signos de puntuación no aportan información relevante."
      ],
      "metadata": {
        "id": "UVq-KvUwh6Sx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import string\n",
        "\n",
        "def remove_punctuation(text):\n",
        "    return text.translate(str.maketrans('', '', string.punctuation))\n",
        "\n",
        "texts_df['cleaned_tuits'] = texts_df['cleaned_tuits'].apply(remove_punctuation)"
      ],
      "metadata": {
        "id": "g5mhzm1Kh1eA"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Eliminación de caracteres no deseados: Además de los emojis y URLs, podrías eliminar otros caracteres no deseados como números, caracteres especiales, etc. Esto dependerá de los requisitos específicos de tu análisis."
      ],
      "metadata": {
        "id": "jZ0aiP6rjGNO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "\n",
        "def remove_special_chars(text):\n",
        "    return re.sub(r'[^a-záéíóúñ\\s]', '', text)\n",
        "\n",
        "texts_df['cleaned_tuits'] = texts_df['cleaned_tuits'].apply(remove_special_chars)"
      ],
      "metadata": {
        "id": "YA6Jg0sMjHSx"
      },
      "execution_count": 25,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.10.12"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}